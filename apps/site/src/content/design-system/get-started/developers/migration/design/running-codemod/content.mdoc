With the update to GEL v1 there is an entirely new token system meaning previous color classnames e.g. `bg-primary` are incompatible with the new system. To assist with the migration, we have provided a codemod script to automate the process of updating your codebase where possible

We use [jscodeshift](https://github.com/facebook/jscodeshift) to run codemods. To apply a codemod, install `jscodeshift` if you donâ€™t already have it:

```html
<StaticCode language="js" code={`npm install -g jscodeshift`} />
```

Then run the codemod against your source files. For example:

```html
<StaticCode language="js" code={`npx jscodeshift -t ./codemods/update-date-picker.js src/`} />
```

`-t` points to the codemod file.

`src/` is the folder you want to transform (adjust as needed).

Example

```html
<StaticCode language="js" code={`npx jscodeshift -t https://raw.githubusercontent.com/WestpacGEL/GEL-next/refs/heads/main/packages/ui/scripts/codemods/gel-tokens-tailwind-v1.cjs "to/your/files/**/*.tsx"`} />
```

This will apply the codemod to all .tsx files in your project.

For classes we are unable to replace with the equivalent token the code will inject a `[REPLACE_TOKEN]` string where it will require working with your project designer to manual update it to the correct color token.
