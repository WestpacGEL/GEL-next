### Base pattern

This pattern simplifies address capture to the most basic elements, without the need for extra functionality. It can be used on it own or within other more complex patterns eg as the manual entry option for Auto-address.

```tsx
<form spacingclassName="w-full lg:w-7/12">
  <ManualAddress />
</form>
```

### Usage examples

This example shows the base pattern used with additional questions when further details are required; Mailing address.

To capture a different mailing address, use a text label with a button group to answer the question 'Do you have a different mailing address' with a yes or no. Depending on your project requirements you can serve either an Auto address, Manual address, Manual complex address, or International address. This should alway follow directly after the Home address.

```tsx
() => {
  const [hasDifferentMailingAddress, setHasDifferentMailingAddress] = useState('');

  return (
    <form className="w-full lg:w-7/12" spacing="large">
      <Field label="Do you have a different mailing address?">
        <ButtonGroup
          size="large"
          value={hasDifferentMailingAddress}
          onChange={value => setHasDifferentMailingAddress(value)}
          buttons={[
            { value: 'yes', label: 'Yes' },
            { value: 'no', label: 'No' },
          ]}
        />
      </Field>
      {hasDifferentMailingAddress === 'yes' && (
        <div className="pt-4">
          <ManualAddress />
        </div>
      )}
    </form>
  );
};
```
