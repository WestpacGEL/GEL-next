There are a few different ways to communicate that something is loading, the direction you take depends on the content you are waiting on. Page loading solutions are used when the system is waiting for an entire page or application to load. Loading pages should also communicate with the user about what is happening and why they are waiting.

### Why

- The process is transitioning to a new application
- The page is loading a very large volume of content
- There is a technical issue

In these scenarios it can be important to disable the entire screen so the user cannot interact with it, using an overlay can achieve this.

### When

Display after about 1-2 seconds

### What

The most common page loading pattern is a simple, animated [Progress Indicator](/components/progress-indicator) (or Spinner icon) on a page overlay. This approach prevents the user from interacting with the content on the screen by covering the entire page including headers, footers or any other navigation. The loading animation should be accompanied by messaging that explains what is happening and why the user is waiting. The message can change based on how long the system is taking.

#### Spinner vs animation

Depending on the process or the audience, instead of showing a simple spinner, we can take the opportunity to insert a brand moment by using a more complex, branded and potentially engaging animation. These are usually reserved for customer facing processes. These animations can be visually specific to the actual process, for example showing an animated letter if the system is sending a message.

### Usage example

Description of what will be displayed

```jsx
() => {
  const state = useOverlayTriggerState({});
  return <>
      <Modal size="full" state={state} aria-label="Loading overlay" className="bg-transparent">
        <ModalBody onClick={state.close} className="align-center min-h-100vh min-w-100vw flex flex-col justify-center">
          <ProgressIndicator color="white" size="large" label="Loading..." />
        </ModalBody>
      </Modal>
      <Button onClick={state.open}>Open Loader</Button>
    </>;
}
```
