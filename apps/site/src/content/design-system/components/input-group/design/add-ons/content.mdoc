Add-on elements can be used either before or after an input, they can provide clear affordance that helps users understand the information they are required to enter.

### Types & sizes

```tsx
() => {
  const [value, setValue] = useState(0);

  return (
    <Fragment>
      <h4 className="typography-body-10 text-text-muted italic mb-3">Text add-ons</h4>
      <InputGroup width={10} size="small" name="example-text" before="Text" after="Text">
        <Input defaultValue="Small" />
      </InputGroup>

      <InputGroup width={10} size="medium" name="example-text" before="Text" after="Text">
        <Input defaultValue="Medium" />
      </InputGroup>

      <InputGroup width={10} size="large" name="example-text" before="Text" after="Text">
        <Input defaultValue="Large" />
      </InputGroup>

      <InputGroup width={10} size="xlarge" name="example-text" before="Text" after="Text">
        <Input defaultValue="XLarge" />
      </InputGroup>

      <h4 className="typography-body-10 text-text-muted italic mb-3">Select add-ons</h4>

      <InputGroup
        width={10}
        size="small"
        before={
          <Select size="small">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
        after={
          <Select size="small">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
      >
        <Input defaultValue="Small" />
      </InputGroup>

      <InputGroup
        width={10}
        size="medium"
        before={
          <Select size="medium">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
        after={
          <Select size="medium">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
      >
        <Input defaultValue="Medium" />
      </InputGroup>

      <InputGroup
        width={10}
        size="large"
        before={
          <Select size="large">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
        after={
          <Select size="large">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
      >
        <Input defaultValue="Large" />
      </InputGroup>

      <InputGroup
        width={10}
        size="xlarge"
        before={
          <Select size="xlarge">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
        after={
          <Select size="xlarge">
            <option>Select</option>
            <option>Option 1</option>
            <option>Option 2</option>
          </Select>
        }
      >
        <Input defaultValue="XLarge" />
      </InputGroup>

      <h4 className="typography-body-10 text-text-muted italic mb-3">Button add-ons</h4>

      <InputGroup
        width={10}
        size="small"
        name="example-text"
        before={<Button size="small">Button</Button>}
        after={<Button size="small">Button</Button>}
      >
        <Input defaultValue="Small" />
      </InputGroup>

      <InputGroup
        width={10}
        size="medium"
        name="example-text"
        before={<Button size="medium">Button</Button>}
        after={<Button size="medium">Button</Button>}
      >
        <Input defaultValue="Medium" />
      </InputGroup>

      <InputGroup
        width={10}
        size="large"
        name="example-text"
        before={<Button size="large">Button</Button>}
        after={<Button size="large">Button</Button>}
      >
        <Input defaultValue="Large" />
      </InputGroup>

      <InputGroup
        width={10}
        size="xlarge"
        name="example-text"
        before={<Button size="xlarge">Button</Button>}
        after={<Button size="xlarge">Button</Button>}
      >
        <Input defaultValue="XLarge" />
      </InputGroup>
    </Fragment>
  );
};
```

### Usage examples

```tsx
() => {
  const [value, setValue] = useState(0);

  return (
    <Fragment>
      <InputGroup width={10} name="example-text" label="Total amount (in whole dollars)" before="AUD" after=".00">
        <Input defaultValue="" type="number" />
      </InputGroup>

      <InputGroup
        size="large"
        width={10}
        before="$"
        name="example-select"
        label="Rental amount"
        after={
          <Select
            name="example-select-select"
            label="Currency"
            size="large"
            defaultValue="monthly"
            onChange={event => console.log(`Selected ${event.target.value}`)}
          >
            <option value="monthly">Monthly</option>
            <option value="weekly">Weekly</option>
          </Select>
        }
      >
        <Input type="number"/>
      </InputGroup>

      <InputGroup size="large" width={30} name="example-button" label="Search" after={<Button size="large" >Go</Button>}>
        <Input defaultValue="" />
      </InputGroup>

      <InputGroup
        size="large"
        width={10}
        name="example-select"
        label="Phone number"
        placeholder="Placeholder text"
        before={
          <Select
            name="example-select-select"
            label="+612"
            size="large"
            onChange={event => console.log(`Selected ${event.target.value}`)}
            data={[
              { text: '+612', value: '+612' },
              { text: '+613', value: '+613' },
              { text: '+614', value: '+614' },
            ]}
          >
            <option value="+612">+612</option>
            <option value="+613">+613</option>
            <option value="+614">+614</option>
          </Select>
        }
      >
        <Input type="number" />
      </InputGroup>

      <InputGroup
        size="large"
        width={4}
        name="example-button"
        label="Number stepper"
        before={
          <Button size="large" onClick={() => setValue(value => value - 1)}>
            -
          </Button>
        }
        after={
          <Button size="large" onClick={() => setValue(value => value + 1)}>
            +
          </Button>
        }
      >
        <Input value={value} type="number" onChange={event => setValue(parseInt(event.target.value))} />
      </InputGroup>
    </Fragment>
  );
};
```

### Error state

```tsx
 () => {
      const [value, setValue] = useState(0);
    
      return (
        <Fragment>
          <h4 className="typography-body-10 text-text-muted italic mb-3">Text add-ons with errors</h4>

    
          <InputGroup width={10} size="medium" name="example-text" before="Text" after="Text" label="Label" errorMessage="If there is an error, it can go here">
            <Input invalid defaultValue="" />
          </InputGroup>

    
          <h4 className="typography-body-10 text-text-muted italic mb-3">Select add-ons with errors</h4>
    
    
    
          <InputGroup
            width={10}
            size="medium"
label="Label" errorMessage="If there is an error, it can go here"
            before={
              <Select invalid size="medium" errorMessage="If there is an error, it can go here">
                <option>Select</option>
                <option>Option 1</option>
                <option>Option 2</option>
              </Select>
            }
            after={
              <Select invalid size="medium" errorMessage="If there is an error, it can go here">
                <option>Select</option>
                <option>Option 1</option>
                <option>Option 2</option>
              </Select>
            }
          >
            <Input invalid errorMessage="If there is an error, it can go here"defaultValue="" />
          </InputGroup>
    
    
    
          <h4 className="typography-body-10 text-text-muted italic mb-3">Button add-ons with errors</h4>
    
    
          <InputGroup
            width={10}
            size="medium"
label="Label" errorMessage="If there is an error, it can go here"
            name="example-text"
            before={<Button size="medium">Button</Button>}
            after={<Button size="medium">Button</Button>}
          >
            <Input invalid defaultValue="" />
          </InputGroup>
    
        </Fragment>
      );
    };
```
