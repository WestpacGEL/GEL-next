### Default pagination with totalPages

```tsx
() => {
  const [page, setPage] = useState(1);

  return (
    <div className="flex flex-col gap-3">
      <div className="flex flex-col items-start">
        <ComponentTitle>Declarative</ComponentTitle>
        <Pagination
          current={page}
          onChange={changedPage => {
            setPage(changedPage);
          }}
          totalPages={20}
        />
      </div>
      <div className="flex flex-col items-start">
        <ComponentTitle>Infinite</ComponentTitle>
        <Pagination
          infinite
          current={page}
          onChange={changedPage => {
            setPage(changedPage);
          }}
          totalPages={20}
        />
      </div>
    </div>
  );
};
```


### Pagination using pages props

```tsx
() => {
  const [page, setPage] = useState(1);

  return (
    <div className="flex flex-col gap-3">
      <div className="flex flex-col items-start">
        <ComponentTitle>Declarative</ComponentTitle>
        <Pagination
          current={page}
          onChange={changedPage => {
            setPage(changedPage);
          }}
          pages={[{ text: '1' }, { text: '2' }, { text: '3' }]}
        />
      </div>
      <div className="flex flex-col items-start">
        <ComponentTitle>Infinite</ComponentTitle>
        <Pagination
          infinite
          current={page}
          onChange={changedPage => {
            setPage(changedPage);
          }}
          pages={[{ text: '1' }, { text: '2' }, { text: '3' }]}
        />
      </div>
    </div>
  );
};
```

### Custom next and back buttons

```tsx
() => {
  const [page, setPage] = useState(1);

  return (
    <Pagination
      backLabel="Go back"
      nextLabel="Go fourth"
      current={page}
      onChange={changedPage => {
        setPage(changedPage);
      }}
      pages={[{ text: '1' }, { text: '2' }, { text: '3' }]}
    />
  );
};
```
