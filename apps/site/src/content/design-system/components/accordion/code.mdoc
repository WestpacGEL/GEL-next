### Default accordion

See Visual design for the usage recommendations for the default style.

```jsx
<Accordion>
  {[
    { key: 'files', title: 'Your files' },
    { key: 'shared', title: 'Shared with you' },
    { key: 'last', title: 'Last item' },
  ].map(({ key, title }) => (
    <Accordion.Item key={key} title={title}>
      <h3>{title}</h3>
      <p>
        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat in, nobis itaque iste sequi, pariatur, nam
        reiciendis quasi illum nulla aliquid mollitia corrupti nostrum incidunt? At minima error nobis ullam!
      </p>
    </Accordion.Item>
  ))}
</Accordion>
```

### Lego accordion

See Visual design for the usage recommendations for the lego style.

```jsx
<Accordion color="hero" rounded={false}>
  {[
    { key: 'files', title: 'Your files' },
    { key: 'shared', title: 'Shared with you' },
    { key: 'last', title: 'Last item' },
  ].map(({ key, title }) => (
    <Accordion.Item key={key} title={title}>
      <h3>{title}</h3>
      <p>
        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat in, nobis itaque iste sequi, pariatur, nam
        reiciendis quasi illum nulla aliquid mollitia corrupti nostrum incidunt? At minima error nobis ullam!
      </p>
    </Accordion.Item>
  ))}
</Accordion>
```

### Controlled example

```jsx
() => {
  const [expandedKeys, setExpandedKeys] = useState<Set<Key>>();
  return (
    <Accordion
      expandedKeys={expandedKeys}
      onExpandedChange={keys => {
        setExpandedKeys(keys);
      }}
    >
      {[
        { key: 'files', title: 'Your files' },
        { key: 'shared', title: 'Shared with you' },
        { key: 'last', title: 'Last item' },
      ].map(({ key, title }) => (
        <Accordion.Item key={key} title={title}>
          <h3>{title}</h3>
          <p>
            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quaerat in, nobis itaque iste sequi, pariatur, nam
            reiciendis quasi illum nulla aliquid mollitia corrupti nostrum incidunt? At minima error nobis ullam!
          </p>
        </Accordion.Item>
      ))}
    </Accordion>
  );
}
```
