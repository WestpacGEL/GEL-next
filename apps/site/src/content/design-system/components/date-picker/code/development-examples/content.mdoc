### Default

Default usage example

```jsx
<DatePicker
  onBlur={function Ma(){}}
  onChange={function Ma(){}}
  onClose={function Ma(){}}
  onFocus={function Ma(){}}
  onOpen={function Ma(){}}
/>
```

### Sizes

Different sizes example

```jsx
() => {
  const sizes = [
    { label: 'Small', size: 'sm' },
    { label: 'Medium (default)', size: 'md' },
    { label: 'Large', size: 'lg' },
    { label: 'XLarge', size: 'xl' },
  ];
  return sizes.map(({ label, size }) => (
    <div className="py-4 border-t border-t-border first:border-t-0" key={size}>
      <ComponentTitle>{label}</ComponentTitle>
      <DatePicker size={size} />
    </div>
  ));
};
```

### Controlled

Controlled value

```jsx
() => {
  const [value, setValue] = useState('2023-08-01');
  return <DatePicker onChange={value => {
    console.log(value.target.value);
    setValue(value.target.value);
  }} onOpen={() => {
    console.log('onOpen');
  }} onClose={() => {
    console.log('onClose');
  }} onBlur={() => {
    console.log('onBlur');
  }} onFocus={() => {
    console.log('onFocus');
  }} value={value} />;
}
```

### **Different date format**

Different date format (dd/MM/yyyy)

```jsx
<DatePicker
  dateFormat="dd/MM/yyyy"
  onBlur={function Ma(){}}
  onChange={function Ma(){}}
  onClose={function Ma(){}}
  onFocus={function Ma(){}}
  onOpen={function Ma(){}}
/>
```

### **Disabled weekends**

Disable weekends

```jsx
<DatePicker
  disableWeekends
  onBlur={function Ma(){}}
  onChange={function Ma(){}}
  onClose={function Ma(){}}
  onFocus={function Ma(){}}
  onOpen={function Ma(){}}
/>
```

### **Disabled days of the week**

Disable days of the week (Mon, Wed, Fri in example)

```jsx
<DatePicker
  disableDaysOfWeek={[
    1,
    3,
    5
  ]}
  onBlur={function Ma(){}}
  onChange={function Ma(){}}
  onClose={function Ma(){}}
  onFocus={function Ma(){}}
  onOpen={function Ma(){}}
/>
```

### **Disabled specific dates**

Disable specific dates (2023-10-10 in example)

```jsx
<DatePicker
  disableDates={[
    '2023-10-10'
  ]}
  onBlur={function Ma(){}}
  onChange={function Ma(){}}
  onClose={function Ma(){}}
  onFocus={function Ma(){}}
  onOpen={function Ma(){}}
/>
```

### **Invalid state**

Error state

```jsx
<DatePicker
  invalid
  onBlur={function Ma(){}}
  onChange={function Ma(){}}
  onClose={function Ma(){}}
  onFocus={function Ma(){}}
  onOpen={function Ma(){}}
/>
```

### **Form field**

Form field example

```jsx
() => {
  const [value, setValue] = useState('2023-08-01');
  return <Field label="Are you an existing customer?" hintMessage="Hint: choose from one of the following options" errorMessage="This is an inline error message">
      <DatePicker onChange={value => {
      console.log(value.target.value);
      setValue(value.target.value);
    }} onOpen={() => {
      console.log('onOpen');
    }} onClose={() => {
      console.log('onClose');
    }} onBlur={() => {
      console.log('onBlur');
    }} onFocus={() => {
      console.log('onFocus');
    }} value={value} />
    </Field>;
}
```

### Range

```jsx
<Fragment>
  <ComponentTitle>Selecting a date range</ComponentTitle>
  <div className="flex gap-3">
    <div className="pb-2">
      <Field label="Select from">
        <DatePicker />
      </Field>
    </div>
    <div className="pb-2">
      <Field label="Select to">
        <DatePicker />
      </Field>
    </div>
  </div>
</Fragment>
```
