## Modal

### Modal Default

```jsx
() => {
  const state = useOverlayTriggerState({});
  return (
    <>
      <Modal isDismissable state={state} aria-label="Modal title" body>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet at voluptatibus ipsam? Placeat quaerat iste
        assumenda voluptatum molestiae delectus atque reiciendis incidunt. Dolorem corrupti porro cumque beatae corporis
        sequi et. Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet at voluptatibus ipsam? Placeat
        quaerat iste assumenda voluptatum molestiae delectus atque reiciendis incidunt. Dolorem corrupti porro cumque
        beatae corporis sequi et. Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet at voluptatibus
        ipsam? Placeat quaerat iste assumenda voluptatum molestiae delectus atque reiciendis incidunt. Dolorem corrupti
        porro cumque beatae corporis sequi et. Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet at
        voluptatibus ipsam? Placeat quaerat iste assumenda voluptatum molestiae delectus atque reiciendis incidunt.
        Dolorem corrupti porro cumque beatae corporis sequi et.
      </Modal>
      <Button onClick={state.open}>Open Modal</Button>
    </>
  );
};
```

### Modal with Footer

```jsx
() => {
  const state = useOverlayTriggerState({});

  return (
    <Fragment>
      <Modal state={state} title="Title" isDismissable={true}>
        <Modal.Body>I'm children</Modal.Body>
        <Modal.Footer>
          <p>Lorem, ipsum dolor</p>
        </Modal.Footer>
      </Modal>
      <Button onClick={state.open}>Open Modal</Button>
    </Fragment>
  );
};
```

### All sizes Modal

```jsx
() => {
  const stateSM = useOverlayTriggerState({});
  const stateMD = useOverlayTriggerState({});
  const stateLG = useOverlayTriggerState({});

  const states = useMemo(() => {
    return {
      sm: stateSM,
      md: stateMD,
      lg: stateLG,
    };
  }, [stateSM, stateMD, stateLG]);

  return (
    <div className="flex gap-2">
      {['sm', 'md', 'lg'].map((size: string) => (
        <Fragment key={size}>
          <Modal isDismissable size={size} state={states[size as 'sm' | 'md' | 'lg']} title={`Modal ${size}`}>
            <Modal.Body>I'm child</Modal.Body>
            <Modal.Footer>
              <p>Lorem, ipsum dolor</p>
            </Modal.Footer>
          </Modal>
          <Button onClick={states[size as 'sm' | 'md' | 'lg'].open}>Open Modal {size}</Button>
        </Fragment>
      ))}
    </div>
  );
};
```

### Not dismissable example

```jsx
() => {
  const state = useOverlayTriggerState({});

  return (
    <Fragment>
      <Modal isKeyboardDismissDisabled state={state} title="Modal title">
        <Modal.Body>I'm children</Modal.Body>
        <Modal.Footer className="flex justify-end gap-2">
          <Button look="faint" onClick={state.close}>
            Close
          </Button>
          <Button look="primary">Submit</Button>
        </Modal.Footer>
      </Modal>
      <Button onClick={state.open}>Open Modal</Button>
    </Fragment>
  );
};
```
