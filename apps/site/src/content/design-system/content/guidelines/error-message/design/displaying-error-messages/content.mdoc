### In-line errors

On a standard form, error messages should be displayed between label and input. They should be visibly distinct from inputs without errors. This distinction is created with the ⚠ icon, a message in red text, and a red keyline for input fields and selects.

```tsx
<form className="flex flex-col gap-4">
  <Field label="Given name">
    <Input size="large" className="w-6/12" />
  </Field>
  <Field label="Family name" errorMessage="Error message goes here if activated">
    <Input invalid size="large" className="w-6/12" />
  </Field>
</form>
```

There are some instances where the red keyline is not used, such as radio buttons, check boxes and button groups.

```tsx
<Grid>
  <GridItem span={{ initial: 12, sm: 6 }}>
    <form>
      <Field label="Label" hintMessage="If there is hint text, it can go here">
        <CheckboxGroup 
          orientation="vertical"
          checkboxes={[
            { value: "Option 1", label: "Option 1" },
            { value: "Option 2", label: "Option 2" },
            { value: "Option 3", label: "Option 3" },
          ]}
        />
      </Field>
    </form>
  </GridItem>
  <GridItem span={{ initial: 12, sm: 6 }}>
    <form>
      <Field
        label="Label"
        hintMessage="If there is hint text, it can go here"
        errorMessage="If there is an error, it can go here"
      >
        <CheckboxGroup 
          orientation="vertical"
          checkboxes={[
            { value: "Option 1", label: "Option 1" },
            { value: "Option 2", label: "Option 2" },
            { value: "Option 3", label: "Option 3" },
          ]}
        />
      </Field>
    </form>
  </GridItem>
</Grid>
```

#### WHY DISPLAY MESSAGES IN BETWEEN LABEL AND INPUT?

Surfacing the error below the label and above the input gives greater context to the error message. It also assists people who use magnification tools to read the label and an associate error in a natural reading order. This avoids any unnecessary scrolling up and down.

This also helps on mobile devices when tapping into the input opens a virtual keyboard. By placing the error message just above the input, the error message isn’t covered by the keyboard.

### Error summary

In addition to in-line error messaging, there should also be a summary of errors displayed at the top of a page that is triggered by selecting the submit button. The summary contains a list of all active errors on the page.

The summary allows screen reader users to understand what they must do to recover from the errors. They can proceed by using the links in the error summary, or tab through the error summary and continue onto the page, flowing naturally down and recovering as they go.

For one-page and multi-page forms, an error summary is the most accessible way of managing errors.

```jsx

  <Alert look="danger" >
    <strong>Please fix the following 3 errors</strong>
    <ul className="[&_li]:my-1 [&_li]:underline">
      <li>Title</li>
      <li>Given name</li>
      <li>Family name</li>
    </ul>
  </Alert>
```

### Avoid disabled or ‘greyed out’ buttons

For most people, a disabled button can be confusing and frustrating. To a person relying on assistive technology, a disabled button may not be obvious to them at all. This creates a significant barrier in using a form. It is better to guide a customer through helpful messaging, so they understand what to do next.
