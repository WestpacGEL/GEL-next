
//
// style_dictionary_colors.swift
//

// Do not edit directly, this file was auto-generated.


import UIKit

public class {
    public static let primitivesBorderRadius100 = 2
    public static let primitivesBorderRadius200 = 4
    public static let primitivesBorderRadius300 = 6
    public static let primitivesBorderRadius400 = 8
    public static let primitivesBorderRadius500 = 12
    public static let primitivesBorderRadius600 = 16
    public static let primitivesBorderRadius700 = 24
    public static let primitivesBorderRadius800 = 32
    public static let primitivesBorderRadius900 = 99
    public static let primitivesBorderRadiusNone = 0
    public static let primitivesBorderWidthDefault = 1
    public static let primitivesBorderWidthThick = 3
    public static let primitivesColorReservedBlue100 = UIColor(red: 0.851, green: 0.918, blue: 0.965, alpha: 1)
    public static let primitivesColorReservedBlue200 = UIColor(red: 0.600, green: 0.780, blue: 0.906, alpha: 1)
    public static let primitivesColorReservedBlue300 = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1)
    public static let primitivesColorReservedBlue400 = UIColor(red: 0.141, green: 0.529, blue: 0.800, alpha: 1)
    public static let primitivesColorReservedBlue50 = UIColor(red: 0.949, green: 0.973, blue: 0.988, alpha: 1)
    public static let primitivesColorReservedBlue500 = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1)
    public static let primitivesColorReservedBlue600 = UIColor(red: 0.000, green: 0.388, blue: 0.655, alpha: 1)
    public static let primitivesColorReservedBlue700 = UIColor(red: 0.000, green: 0.318, blue: 0.537, alpha: 1)
    public static let primitivesColorReservedBlue800 = UIColor(red: 0.000, green: 0.251, blue: 0.424, alpha: 1)
    public static let primitivesColorReservedBlue900 = UIColor(red: 0.000, green: 0.180, blue: 0.306, alpha: 1)
    public static let primitivesColorReservedBlue950 = UIColor(red: 0.000, green: 0.114, blue: 0.192, alpha: 1)
    public static let primitivesColorReservedGreen100 = UIColor(red: 0.851, green: 0.925, blue: 0.851, alpha: 1)
    public static let primitivesColorReservedGreen200 = UIColor(red: 0.600, green: 0.800, blue: 0.600, alpha: 1)
    public static let primitivesColorReservedGreen300 = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1)
    public static let primitivesColorReservedGreen400 = UIColor(red: 0.141, green: 0.573, blue: 0.141, alpha: 1)
    public static let primitivesColorReservedGreen50 = UIColor(red: 0.949, green: 0.976, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedGreen500 = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen600 = UIColor(red: 0.000, green: 0.427, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen700 = UIColor(red: 0.000, green: 0.353, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen800 = UIColor(red: 0.000, green: 0.275, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen900 = UIColor(red: 0.000, green: 0.200, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen950 = UIColor(red: 0.000, green: 0.125, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange100 = UIColor(red: 0.953, green: 0.847, blue: 0.800, alpha: 1)
    public static let primitivesColorReservedOrange200 = UIColor(red: 0.910, green: 0.694, blue: 0.600, alpha: 1)
    public static let primitivesColorReservedOrange300 = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1)
    public static let primitivesColorReservedOrange400 = UIColor(red: 0.808, green: 0.345, blue: 0.149, alpha: 1)
    public static let primitivesColorReservedOrange50 = UIColor(red: 0.988, green: 0.961, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedOrange500 = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange600 = UIColor(red: 0.655, green: 0.196, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange700 = UIColor(red: 0.541, green: 0.161, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange800 = UIColor(red: 0.424, green: 0.125, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange900 = UIColor(red: 0.310, green: 0.094, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange950 = UIColor(red: 0.192, green: 0.059, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed100 = UIColor(red: 0.976, green: 0.902, blue: 0.902, alpha: 1)
    public static let primitivesColorReservedRed200 = UIColor(red: 0.918, green: 0.651, blue: 0.651, alpha: 1)
    public static let primitivesColorReservedRed300 = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1)
    public static let primitivesColorReservedRed400 = UIColor(red: 0.816, green: 0.200, blue: 0.200, alpha: 1)
    public static let primitivesColorReservedRed50 = UIColor(red: 0.988, green: 0.949, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedRed500 = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed600 = UIColor(red: 0.655, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed700 = UIColor(red: 0.537, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed800 = UIColor(red: 0.424, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed900 = UIColor(red: 0.306, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed950 = UIColor(red: 0.192, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow100 = UIColor(red: 1.000, green: 1.000, blue: 0.902, alpha: 1)
    public static let primitivesColorReservedYellow200 = UIColor(red: 1.000, green: 1.000, blue: 0.749, alpha: 1)
    public static let primitivesColorReservedYellow300 = UIColor(red: 1.000, green: 1.000, blue: 0.502, alpha: 1)
    public static let primitivesColorReservedYellow400 = UIColor(red: 1.000, green: 1.000, blue: 0.251, alpha: 1)
    public static let primitivesColorReservedYellow50 = UIColor(red: 1.000, green: 1.000, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedYellow500 = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow600 = UIColor(red: 0.851, green: 0.851, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow700 = UIColor(red: 0.702, green: 0.702, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow800 = UIColor(red: 0.549, green: 0.549, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow900 = UIColor(red: 0.400, green: 0.400, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow950 = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRed100 = UIColor(red: 0.961, green: 0.898, blue: 0.898, alpha: 1)
    public static let primitivesColorWbcDarkRed200 = UIColor(red: 0.902, green: 0.749, blue: 0.749, alpha: 1)
    public static let primitivesColorWbcDarkRed300 = UIColor(red: 0.800, green: 0.502, blue: 0.502, alpha: 1)
    public static let primitivesColorWbcDarkRed400 = UIColor(red: 0.702, green: 0.251, blue: 0.251, alpha: 1)
    public static let primitivesColorWbcDarkRed50 = UIColor(red: 0.980, green: 0.949, blue: 0.949, alpha: 1)
    public static let primitivesColorWbcDarkRed500 = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRed600 = UIColor(red: 0.510, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRed700 = UIColor(red: 0.420, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRed800 = UIColor(red: 0.329, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRed900 = UIColor(red: 0.239, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRed950 = UIColor(red: 0.149, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorWbcDarkRedOpacity = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 0.5)
    public static let primitivesColorWbcGrey100 = UIColor(red: 0.961, green: 0.961, blue: 0.965, alpha: 1)
    public static let primitivesColorWbcGrey200 = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1)
    public static let primitivesColorWbcGrey300 = UIColor(red: 0.714, green: 0.714, blue: 0.737, alpha: 1)
    public static let primitivesColorWbcGrey400 = UIColor(red: 0.557, green: 0.553, blue: 0.596, alpha: 1)
    public static let primitivesColorWbcGrey50 = UIColor(red: 0.976, green: 0.976, blue: 0.980, alpha: 1)
    public static let primitivesColorWbcGrey500 = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1)
    public static let primitivesColorWbcGrey600 = UIColor(red: 0.243, green: 0.239, blue: 0.267, alpha: 1)
    public static let primitivesColorWbcGrey700 = UIColor(red: 0.196, green: 0.196, blue: 0.220, alpha: 1)
    public static let primitivesColorWbcGrey800 = UIColor(red: 0.153, green: 0.153, blue: 0.169, alpha: 1)
    public static let primitivesColorWbcGrey900 = UIColor(red: 0.110, green: 0.110, blue: 0.122, alpha: 1)
    public static let primitivesColorWbcGrey950 = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1)
    public static let primitivesColorWbcNavy100 = UIColor(red: 0.886, green: 0.882, blue: 0.957, alpha: 1)
    public static let primitivesColorWbcNavy200 = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1)
    public static let primitivesColorWbcNavy300 = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1)
    public static let primitivesColorWbcNavy400 = UIColor(red: 0.259, green: 0.235, blue: 0.592, alpha: 1)
    public static let primitivesColorWbcNavy50 = UIColor(red: 0.945, green: 0.941, blue: 0.980, alpha: 1)
    public static let primitivesColorWbcNavy500 = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1)
    public static let primitivesColorWbcNavy600 = UIColor(red: 0.094, green: 0.078, blue: 0.302, alpha: 1)
    public static let primitivesColorWbcNavy700 = UIColor(red: 0.075, green: 0.059, blue: 0.282, alpha: 1)
    public static let primitivesColorWbcNavy800 = UIColor(red: 0.051, green: 0.035, blue: 0.243, alpha: 1)
    public static let primitivesColorWbcNavy900 = UIColor(red: 0.035, green: 0.020, blue: 0.220, alpha: 1)
    public static let primitivesColorWbcNavy950 = UIColor(red: 0.024, green: 0.008, blue: 0.212, alpha: 1)
    public static let primitivesColorWbcNavyOpacity = UIColor(red: 0.227, green: 0.204, blue: 0.576, alpha: 0.6)
    public static let primitivesColorWbcOrange100 = UIColor(red: 0.996, green: 0.949, blue: 0.906, alpha: 1)
    public static let primitivesColorWbcOrange200 = UIColor(red: 0.992, green: 0.871, blue: 0.765, alpha: 1)
    public static let primitivesColorWbcOrange300 = UIColor(red: 0.980, green: 0.737, blue: 0.529, alpha: 1)
    public static let primitivesColorWbcOrange400 = UIColor(red: 0.973, green: 0.608, blue: 0.294, alpha: 1)
    public static let primitivesColorWbcOrange50 = UIColor(red: 1.000, green: 0.973, blue: 0.953, alpha: 1)
    public static let primitivesColorWbcOrange500 = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1)
    public static let primitivesColorWbcOrange600 = UIColor(red: 0.816, green: 0.408, blue: 0.051, alpha: 1)
    public static let primitivesColorWbcOrange700 = UIColor(red: 0.675, green: 0.333, blue: 0.043, alpha: 1)
    public static let primitivesColorWbcOrange800 = UIColor(red: 0.529, green: 0.263, blue: 0.031, alpha: 1)
    public static let primitivesColorWbcOrange900 = UIColor(red: 0.384, green: 0.192, blue: 0.024, alpha: 1)
    public static let primitivesColorWbcOrange950 = UIColor(red: 0.239, green: 0.122, blue: 0.016, alpha: 1)
    public static let primitivesColorWbcOrangeOpacity = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 0.45)
    public static let primitivesColorWbcPink100 = UIColor(red: 1.000, green: 0.925, blue: 0.984, alpha: 1)
    public static let primitivesColorWbcPink200 = UIColor(red: 1.000, green: 0.812, blue: 0.965, alpha: 1)
    public static let primitivesColorWbcPink300 = UIColor(red: 1.000, green: 0.620, blue: 0.929, alpha: 1)
    public static let primitivesColorWbcPink400 = UIColor(red: 1.000, green: 0.431, blue: 0.894, alpha: 1)
    public static let primitivesColorWbcPink50 = UIColor(red: 1.000, green: 0.961, blue: 0.992, alpha: 1)
    public static let primitivesColorWbcPink500 = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1)
    public static let primitivesColorWbcPink600 = UIColor(red: 0.851, green: 0.204, blue: 0.729, alpha: 1)
    public static let primitivesColorWbcPink700 = UIColor(red: 0.702, green: 0.169, blue: 0.600, alpha: 1)
    public static let primitivesColorWbcPink800 = UIColor(red: 0.549, green: 0.133, blue: 0.471, alpha: 1)
    public static let primitivesColorWbcPink900 = UIColor(red: 0.349, green: 0.082, blue: 0.302, alpha: 1)
    public static let primitivesColorWbcPink950 = UIColor(red: 0.200, green: 0.047, blue: 0.173, alpha: 1)
    public static let primitivesColorWbcPinkOpacity = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 0.45)
    public static let primitivesColorWbcPurple100 = UIColor(red: 0.922, green: 0.804, blue: 0.976, alpha: 1)
    public static let primitivesColorWbcPurple200 = UIColor(red: 0.808, green: 0.518, blue: 0.941, alpha: 1)
    public static let primitivesColorWbcPurple300 = UIColor(red: 0.737, green: 0.341, blue: 0.922, alpha: 1)
    public static let primitivesColorWbcPurple400 = UIColor(red: 0.678, green: 0.196, blue: 0.902, alpha: 1)
    public static let primitivesColorWbcPurple50 = UIColor(red: 0.980, green: 0.945, blue: 0.992, alpha: 1)
    public static let primitivesColorWbcPurple500 = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1)
    public static let primitivesColorWbcPurple600 = UIColor(red: 0.529, green: 0.090, blue: 0.729, alpha: 1)
    public static let primitivesColorWbcPurple700 = UIColor(red: 0.439, green: 0.075, blue: 0.608, alpha: 1)
    public static let primitivesColorWbcPurple800 = UIColor(red: 0.361, green: 0.059, blue: 0.498, alpha: 1)
    public static let primitivesColorWbcPurple900 = UIColor(red: 0.271, green: 0.047, blue: 0.373, alpha: 1)
    public static let primitivesColorWbcPurple950 = UIColor(red: 0.180, green: 0.031, blue: 0.251, alpha: 1)
    public static let primitivesColorWbcPurpleOpacity = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 0.5)
    public static let primitivesColorWbcRed100 = UIColor(red: 0.980, green: 0.800, blue: 0.796, alpha: 1)
    public static let primitivesColorWbcRed200 = UIColor(red: 0.957, green: 0.431, blue: 0.412, alpha: 1)
    public static let primitivesColorWbcRed300 = UIColor(red: 0.945, green: 0.259, blue: 0.235, alpha: 1)
    public static let primitivesColorWbcRed400 = UIColor(red: 0.933, green: 0.133, blue: 0.106, alpha: 1)
    public static let primitivesColorWbcRed50 = UIColor(red: 1.000, green: 0.941, blue: 0.941, alpha: 1)
    public static let primitivesColorWbcRed500 = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1)
    public static let primitivesColorWbcRed600 = UIColor(red: 0.725, green: 0.078, blue: 0.055, alpha: 1)
    public static let primitivesColorWbcRed700 = UIColor(red: 0.600, green: 0.063, blue: 0.043, alpha: 1)
    public static let primitivesColorWbcRed800 = UIColor(red: 0.471, green: 0.051, blue: 0.035, alpha: 1)
    public static let primitivesColorWbcRed900 = UIColor(red: 0.341, green: 0.035, blue: 0.024, alpha: 1)
    public static let primitivesColorWbcRed950 = UIColor(red: 0.216, green: 0.024, blue: 0.016, alpha: 1)
    public static let primitivesColorWbcRedOpacity = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 0.5)
    public static let themesWestpacBorderRadiusFull = 99
    public static let themesWestpacBorderRadiusLarge = 12
    public static let themesWestpacBorderRadiusMedium = 6
    public static let themesWestpacBorderRadiusNone = 0
    public static let themesWestpacBorderRadiusSmall = 2
    public static let themesWestpacBorderRadiusXlarge = 24
    public static let themesWestpacColorAliasSurfacePictogramAccentDm = UIColor(red: 0.725, green: 0.078, blue: 0.055, alpha: 1)
    public static let themesWestpacColorAliasSurfacePictogramAccentLm = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1)
    public static let themesWestpacColorAliasSurfacePictogramBaseDm = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1)
    public static let themesWestpacColorAliasSurfacePictogramBaseLm = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1)
    public static let themesWestpacColorAliasTextBodyDm = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1)
    public static let themesWestpacColorAliasTextBodyLm = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1)
    public static let themesWestpacColorAliasTextHeadingDm = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1)
    public static let themesWestpacColorAliasTextHeadingLm = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1)
    public static let themesWestpacColorDance100 = UIColor(red: 0.996, green: 0.949, blue: 0.906, alpha: 1)
    public static let themesWestpacColorDance200 = UIColor(red: 0.992, green: 0.871, blue: 0.765, alpha: 1)
    public static let themesWestpacColorDance300 = UIColor(red: 0.980, green: 0.737, blue: 0.529, alpha: 1)
    public static let themesWestpacColorDance400 = UIColor(red: 0.973, green: 0.608, blue: 0.294, alpha: 1)
    public static let themesWestpacColorDance50 = UIColor(red: 1.000, green: 0.973, blue: 0.953, alpha: 1)
    public static let themesWestpacColorDance500 = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1)
    public static let themesWestpacColorDance600 = UIColor(red: 0.816, green: 0.408, blue: 0.051, alpha: 1)
    public static let themesWestpacColorDance700 = UIColor(red: 0.675, green: 0.333, blue: 0.043, alpha: 1)
    public static let themesWestpacColorDance800 = UIColor(red: 0.529, green: 0.263, blue: 0.031, alpha: 1)
    public static let themesWestpacColorDance900 = UIColor(red: 0.384, green: 0.192, blue: 0.024, alpha: 1)
    public static let themesWestpacColorDance950 = UIColor(red: 0.239, green: 0.122, blue: 0.016, alpha: 1)
    public static let themesWestpacColorDanceOpacity = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 0.45)
    public static let themesWestpacColorHero100 = UIColor(red: 0.886, green: 0.882, blue: 0.957, alpha: 1)
    public static let themesWestpacColorHero200 = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1)
    public static let themesWestpacColorHero300 = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1)
    public static let themesWestpacColorHero400 = UIColor(red: 0.259, green: 0.235, blue: 0.592, alpha: 1)
    public static let themesWestpacColorHero50 = UIColor(red: 0.945, green: 0.941, blue: 0.980, alpha: 1)
    public static let themesWestpacColorHero500 = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1)
    public static let themesWestpacColorHero600 = UIColor(red: 0.094, green: 0.078, blue: 0.302, alpha: 1)
    public static let themesWestpacColorHero700 = UIColor(red: 0.075, green: 0.059, blue: 0.282, alpha: 1)
    public static let themesWestpacColorHero800 = UIColor(red: 0.051, green: 0.035, blue: 0.243, alpha: 1)
    public static let themesWestpacColorHero900 = UIColor(red: 0.035, green: 0.020, blue: 0.220, alpha: 1)
    public static let themesWestpacColorHero950 = UIColor(red: 0.024, green: 0.008, blue: 0.212, alpha: 1)
    public static let themesWestpacColorHeroOpacity = UIColor(red: 0.227, green: 0.204, blue: 0.576, alpha: 0.6)
    public static let themesWestpacColorHoller100 = UIColor(red: 0.922, green: 0.804, blue: 0.976, alpha: 1)
    public static let themesWestpacColorHoller200 = UIColor(red: 0.808, green: 0.518, blue: 0.941, alpha: 1)
    public static let themesWestpacColorHoller300 = UIColor(red: 0.737, green: 0.341, blue: 0.922, alpha: 1)
    public static let themesWestpacColorHoller400 = UIColor(red: 0.678, green: 0.196, blue: 0.902, alpha: 1)
    public static let themesWestpacColorHoller50 = UIColor(red: 0.980, green: 0.945, blue: 0.992, alpha: 1)
    public static let themesWestpacColorHoller500 = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1)
    public static let themesWestpacColorHoller600 = UIColor(red: 0.529, green: 0.090, blue: 0.729, alpha: 1)
    public static let themesWestpacColorHoller700 = UIColor(red: 0.439, green: 0.075, blue: 0.608, alpha: 1)
    public static let themesWestpacColorHoller800 = UIColor(red: 0.361, green: 0.059, blue: 0.498, alpha: 1)
    public static let themesWestpacColorHoller900 = UIColor(red: 0.271, green: 0.047, blue: 0.373, alpha: 1)
    public static let themesWestpacColorHoller950 = UIColor(red: 0.180, green: 0.031, blue: 0.251, alpha: 1)
    public static let themesWestpacColorHollerOpacity = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 0.5)
    public static let themesWestpacColorMonoBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorMonoWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let themesWestpacColorMuted100 = UIColor(red: 0.961, green: 0.961, blue: 0.965, alpha: 1)
    public static let themesWestpacColorMuted200 = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1)
    public static let themesWestpacColorMuted300 = UIColor(red: 0.714, green: 0.714, blue: 0.737, alpha: 1)
    public static let themesWestpacColorMuted400 = UIColor(red: 0.557, green: 0.553, blue: 0.596, alpha: 1)
    public static let themesWestpacColorMuted50 = UIColor(red: 0.976, green: 0.976, blue: 0.980, alpha: 1)
    public static let themesWestpacColorMuted500 = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1)
    public static let themesWestpacColorMuted600 = UIColor(red: 0.243, green: 0.239, blue: 0.267, alpha: 1)
    public static let themesWestpacColorMuted700 = UIColor(red: 0.196, green: 0.196, blue: 0.220, alpha: 1)
    public static let themesWestpacColorMuted800 = UIColor(red: 0.153, green: 0.153, blue: 0.169, alpha: 1)
    public static let themesWestpacColorMuted900 = UIColor(red: 0.110, green: 0.110, blue: 0.122, alpha: 1)
    public static let themesWestpacColorMuted950 = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1)
    public static let themesWestpacColorPop100 = UIColor(red: 1.000, green: 0.925, blue: 0.984, alpha: 1)
    public static let themesWestpacColorPop200 = UIColor(red: 1.000, green: 0.812, blue: 0.965, alpha: 1)
    public static let themesWestpacColorPop300 = UIColor(red: 1.000, green: 0.620, blue: 0.929, alpha: 1)
    public static let themesWestpacColorPop400 = UIColor(red: 1.000, green: 0.431, blue: 0.894, alpha: 1)
    public static let themesWestpacColorPop50 = UIColor(red: 1.000, green: 0.961, blue: 0.992, alpha: 1)
    public static let themesWestpacColorPop500 = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1)
    public static let themesWestpacColorPop600 = UIColor(red: 0.851, green: 0.204, blue: 0.729, alpha: 1)
    public static let themesWestpacColorPop700 = UIColor(red: 0.702, green: 0.169, blue: 0.600, alpha: 1)
    public static let themesWestpacColorPop800 = UIColor(red: 0.549, green: 0.133, blue: 0.471, alpha: 1)
    public static let themesWestpacColorPop900 = UIColor(red: 0.349, green: 0.082, blue: 0.302, alpha: 1)
    public static let themesWestpacColorPop950 = UIColor(red: 0.200, green: 0.047, blue: 0.173, alpha: 1)
    public static let themesWestpacColorPopOpacity = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 0.45)
    public static let themesWestpacColorPrimary100 = UIColor(red: 0.980, green: 0.800, blue: 0.796, alpha: 1)
    public static let themesWestpacColorPrimary200 = UIColor(red: 0.957, green: 0.431, blue: 0.412, alpha: 1)
    public static let themesWestpacColorPrimary300 = UIColor(red: 0.945, green: 0.259, blue: 0.235, alpha: 1)
    public static let themesWestpacColorPrimary400 = UIColor(red: 0.933, green: 0.133, blue: 0.106, alpha: 1)
    public static let themesWestpacColorPrimary50 = UIColor(red: 1.000, green: 0.941, blue: 0.941, alpha: 1)
    public static let themesWestpacColorPrimary500 = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1)
    public static let themesWestpacColorPrimary600 = UIColor(red: 0.725, green: 0.078, blue: 0.055, alpha: 1)
    public static let themesWestpacColorPrimary700 = UIColor(red: 0.600, green: 0.063, blue: 0.043, alpha: 1)
    public static let themesWestpacColorPrimary800 = UIColor(red: 0.471, green: 0.051, blue: 0.035, alpha: 1)
    public static let themesWestpacColorPrimary900 = UIColor(red: 0.341, green: 0.035, blue: 0.024, alpha: 1)
    public static let themesWestpacColorPrimary950 = UIColor(red: 0.216, green: 0.024, blue: 0.016, alpha: 1)
    public static let themesWestpacColorPrimaryOpacity = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 0.5)
    public static let themesWestpacColorReservedDanger100 = UIColor(red: 0.976, green: 0.902, blue: 0.902, alpha: 1)
    public static let themesWestpacColorReservedDanger200 = UIColor(red: 0.918, green: 0.651, blue: 0.651, alpha: 1)
    public static let themesWestpacColorReservedDanger300 = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1)
    public static let themesWestpacColorReservedDanger400 = UIColor(red: 0.816, green: 0.200, blue: 0.200, alpha: 1)
    public static let themesWestpacColorReservedDanger50 = UIColor(red: 0.988, green: 0.949, blue: 0.949, alpha: 1)
    public static let themesWestpacColorReservedDanger500 = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedDanger600 = UIColor(red: 0.655, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedDanger700 = UIColor(red: 0.537, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedDanger800 = UIColor(red: 0.424, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedDanger900 = UIColor(red: 0.306, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedDanger950 = UIColor(red: 0.192, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedInfo100 = UIColor(red: 0.851, green: 0.918, blue: 0.965, alpha: 1)
    public static let themesWestpacColorReservedInfo200 = UIColor(red: 0.600, green: 0.780, blue: 0.906, alpha: 1)
    public static let themesWestpacColorReservedInfo300 = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1)
    public static let themesWestpacColorReservedInfo400 = UIColor(red: 0.141, green: 0.529, blue: 0.800, alpha: 1)
    public static let themesWestpacColorReservedInfo50 = UIColor(red: 0.949, green: 0.973, blue: 0.988, alpha: 1)
    public static let themesWestpacColorReservedInfo500 = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1)
    public static let themesWestpacColorReservedInfo600 = UIColor(red: 0.000, green: 0.388, blue: 0.655, alpha: 1)
    public static let themesWestpacColorReservedInfo700 = UIColor(red: 0.000, green: 0.318, blue: 0.537, alpha: 1)
    public static let themesWestpacColorReservedInfo800 = UIColor(red: 0.000, green: 0.251, blue: 0.424, alpha: 1)
    public static let themesWestpacColorReservedInfo900 = UIColor(red: 0.000, green: 0.180, blue: 0.306, alpha: 1)
    public static let themesWestpacColorReservedInfo950 = UIColor(red: 0.000, green: 0.114, blue: 0.192, alpha: 1)
    public static let themesWestpacColorReservedSuccess100 = UIColor(red: 0.851, green: 0.925, blue: 0.851, alpha: 1)
    public static let themesWestpacColorReservedSuccess200 = UIColor(red: 0.600, green: 0.800, blue: 0.600, alpha: 1)
    public static let themesWestpacColorReservedSuccess300 = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1)
    public static let themesWestpacColorReservedSuccess400 = UIColor(red: 0.141, green: 0.573, blue: 0.141, alpha: 1)
    public static let themesWestpacColorReservedSuccess50 = UIColor(red: 0.949, green: 0.976, blue: 0.949, alpha: 1)
    public static let themesWestpacColorReservedSuccess500 = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSuccess600 = UIColor(red: 0.000, green: 0.427, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSuccess700 = UIColor(red: 0.000, green: 0.353, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSuccess800 = UIColor(red: 0.000, green: 0.275, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSuccess900 = UIColor(red: 0.000, green: 0.200, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSuccess950 = UIColor(red: 0.000, green: 0.125, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSystem100 = UIColor(red: 1.000, green: 1.000, blue: 0.902, alpha: 1)
    public static let themesWestpacColorReservedSystem200 = UIColor(red: 1.000, green: 1.000, blue: 0.749, alpha: 1)
    public static let themesWestpacColorReservedSystem300 = UIColor(red: 1.000, green: 1.000, blue: 0.502, alpha: 1)
    public static let themesWestpacColorReservedSystem400 = UIColor(red: 1.000, green: 1.000, blue: 0.251, alpha: 1)
    public static let themesWestpacColorReservedSystem50 = UIColor(red: 1.000, green: 1.000, blue: 0.949, alpha: 1)
    public static let themesWestpacColorReservedSystem500 = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSystem600 = UIColor(red: 0.851, green: 0.851, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSystem700 = UIColor(red: 0.702, green: 0.702, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSystem800 = UIColor(red: 0.549, green: 0.549, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSystem900 = UIColor(red: 0.400, green: 0.400, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedSystem950 = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedWarning100 = UIColor(red: 0.953, green: 0.847, blue: 0.800, alpha: 1)
    public static let themesWestpacColorReservedWarning200 = UIColor(red: 0.910, green: 0.694, blue: 0.600, alpha: 1)
    public static let themesWestpacColorReservedWarning300 = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1)
    public static let themesWestpacColorReservedWarning400 = UIColor(red: 0.808, green: 0.345, blue: 0.149, alpha: 1)
    public static let themesWestpacColorReservedWarning50 = UIColor(red: 0.988, green: 0.961, blue: 0.949, alpha: 1)
    public static let themesWestpacColorReservedWarning500 = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedWarning600 = UIColor(red: 0.655, green: 0.196, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedWarning700 = UIColor(red: 0.541, green: 0.161, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedWarning800 = UIColor(red: 0.424, green: 0.125, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedWarning900 = UIColor(red: 0.310, green: 0.094, blue: 0.000, alpha: 1)
    public static let themesWestpacColorReservedWarning950 = UIColor(red: 0.192, green: 0.059, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSing100 = UIColor(red: 0.961, green: 0.898, blue: 0.898, alpha: 1)
    public static let themesWestpacColorSing200 = UIColor(red: 0.902, green: 0.749, blue: 0.749, alpha: 1)
    public static let themesWestpacColorSing300 = UIColor(red: 0.800, green: 0.502, blue: 0.502, alpha: 1)
    public static let themesWestpacColorSing400 = UIColor(red: 0.702, green: 0.251, blue: 0.251, alpha: 1)
    public static let themesWestpacColorSing50 = UIColor(red: 0.980, green: 0.949, blue: 0.949, alpha: 1)
    public static let themesWestpacColorSing500 = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSing600 = UIColor(red: 0.510, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSing700 = UIColor(red: 0.420, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSing800 = UIColor(red: 0.329, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSing900 = UIColor(red: 0.239, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSing950 = UIColor(red: 0.149, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesWestpacColorSingOpacity = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 0.5)
    public static let tokensDarkModeBorderRadiusFull = 99
    public static let tokensDarkModeBorderRadiusLg = 12
    public static let tokensDarkModeBorderRadiusMd = 6
    public static let tokensDarkModeBorderRadiusNone = 0
    public static let tokensDarkModeBorderRadiusSm = 2
    public static let tokensDarkModeBorderRadiusXl = 24
    public static let tokensDarkModeColorBackgroundBackgroundPaleBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** Use for screen backgrounds to establish correct emphasis:  Pale in Light Mode,  Black in Dark Mode */
    public static let tokensDarkModeColorBackgroundBackgroundPaleFaint = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: Pale in Light Mode, Faint in Dark Mode */
    public static let tokensDarkModeColorBackgroundBackgroundWhiteBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: White in Light Mode, Black in Dark Mode */
    public static let tokensDarkModeColorBackgroundBackgroundWhiteFaint = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensDarkModeColorBackgroundBackgroundWhitePale = UIColor(red: 0.110, green: 0.110, blue: 0.122, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensDarkModeColorBorderBorderDance = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorBorderBorderDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorBorderBorderDangerMild = UIColor(red: 0.537, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorBorderBorderFocus = UIColor(red: 0.678, green: 0.196, blue: 0.902, alpha: 1) /** This is a reserved colour. It must only be used for the focus state keyboard navigation. */
    public static let tokensDarkModeColorBorderBorderHero = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensDarkModeColorBorderBorderHoller = UIColor(red: 0.678, green: 0.196, blue: 0.902, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensDarkModeColorBorderBorderInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorBorderBorderInfoMild = UIColor(red: 0.000, green: 0.318, blue: 0.537, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorBorderBorderMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** This border colour is used for borders on solid backgrounds. It's not currently used in the Design System. Use in accordance with the brand guidelines and accessibility requirements. */
    public static let tokensDarkModeColorBorderBorderMuted = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1) /** This border colour is not currently used in the Design System. */
    public static let tokensDarkModeColorBorderBorderMutedMild = UIColor(red: 0.196, green: 0.196, blue: 0.220, alpha: 1) /** This border colour is not currently used in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorBorderBorderMutedSoft = UIColor(red: 0.196, green: 0.196, blue: 0.220, alpha: 1) /** This colour replaces the old "Border". It can be used for borders and design embellishment that does not have to be accessible. */
    public static let tokensDarkModeColorBorderBorderMutedStrong = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1) /** This colour replaces the old "BorderDark". It's used for UI elements (form input fields) to ensure that they comply with AA accessible requirements. */
    public static let tokensDarkModeColorBorderBorderPop = UIColor(red: 0.549, green: 0.133, blue: 0.471, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensDarkModeColorBorderBorderPrimary = UIColor(red: 0.933, green: 0.133, blue: 0.106, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensDarkModeColorBorderBorderSing = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorBorderBorderSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorBorderBorderSuccessMild = UIColor(red: 0.000, green: 0.353, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorBorderBorderWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorBorderBorderWarningMild = UIColor(red: 0.541, green: 0.161, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorDataDataAOpacity = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 0.5) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataASolid = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataATint = UIColor(red: 0.957, green: 0.431, blue: 0.412, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataBOpacity = UIColor(red: 0.227, green: 0.204, blue: 0.576, alpha: 0.6) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataBSolid = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataBTint = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataCOpacity = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataCSolid = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataCTint = UIColor(red: 1.000, green: 0.620, blue: 0.929, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataDOpacity = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 0.5) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataDSolid = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataDTint = UIColor(red: 0.808, green: 0.518, blue: 0.941, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataEOpacity = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 0.5) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataESolid = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataETint = UIColor(red: 0.800, green: 0.502, blue: 0.502, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataFOpacity = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataFSolid = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataFTint = UIColor(red: 0.980, green: 0.737, blue: 0.529, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorPictogramSurfacePictogramAccent = UIColor(red: 0.725, green: 0.078, blue: 0.055, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensDarkModeColorPictogramSurfacePictogramBase = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensDarkModeColorStateSurfaceActiveHero = UIColor(red: 0.886, green: 0.882, blue: 0.957, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceActiveHeroFaint = UIColor(red: 0.259, green: 0.235, blue: 0.592, alpha: 1)
    public static let tokensDarkModeColorStateSurfaceActiveMono = UIColor(red: 0.153, green: 0.153, blue: 0.169, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceActiveMutedPale = UIColor(red: 0.243, green: 0.239, blue: 0.267, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceActivePrimary = UIColor(red: 0.980, green: 0.800, blue: 0.796, alpha: 1)
    public static let tokensDarkModeColorStateSurfaceActivePrimaryFaint = UIColor(red: 0.471, green: 0.051, blue: 0.035, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverHero = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverHeroFaint = UIColor(red: 0.051, green: 0.035, blue: 0.243, alpha: 1)
    public static let tokensDarkModeColorStateSurfaceHoverMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverMutedPale = UIColor(red: 0.153, green: 0.153, blue: 0.169, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverPrimary = UIColor(red: 0.957, green: 0.431, blue: 0.412, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverPrimaryFaint = UIColor(red: 0.341, green: 0.035, blue: 0.024, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorSurfaceSurfaceDance = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceDanceFaint = UIColor(red: 0.384, green: 0.192, blue: 0.024, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceDanger = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceDangerFaint = UIColor(red: 0.306, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceHero = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1)
    public static let tokensDarkModeColorSurfaceSurfaceHeroFaint = UIColor(red: 0.024, green: 0.008, blue: 0.212, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfaceHoller = UIColor(red: 0.678, green: 0.196, blue: 0.902, alpha: 1) /** This colour is for data visualisation, however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensDarkModeColorSurfaceSurfaceHollerFaint = UIColor(red: 0.180, green: 0.031, blue: 0.251, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfaceInfo = UIColor(red: 0.141, green: 0.529, blue: 0.800, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceInfoFaint = UIColor(red: 0.000, green: 0.180, blue: 0.306, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** Use surface-mono when you want to switch from white to black. */
    public static let tokensDarkModeColorSurfaceSurfaceMuted = UIColor(red: 0.557, green: 0.553, blue: 0.596, alpha: 1) /** Muted is now slightly lighter but remains accessible in all required scenarios. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedFaint = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1) /** This colour is used for backgrounds. Note; In Light Mode this token references the same colour variable as surface-muted-pale (muted100). This is so we can maintain the correct emphasis for both Light and Dark Modes. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedMild = UIColor(red: 0.196, green: 0.196, blue: 0.220, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedPale = UIColor(red: 0.110, green: 0.110, blue: 0.122, alpha: 1) /** This colour is used for backgrounds */
    public static let tokensDarkModeColorSurfaceSurfaceMutedSoft = UIColor(red: 0.153, green: 0.153, blue: 0.169, alpha: 1) /** This colour is not currently used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedStrong = UIColor(red: 0.243, green: 0.239, blue: 0.267, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedVivid = UIColor(red: 0.976, green: 0.976, blue: 0.980, alpha: 1) /** Use for icons that need to be text colour. */
    public static let tokensDarkModeColorSurfaceSurfacePop = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. */
    public static let tokensDarkModeColorSurfaceSurfacePopFaint = UIColor(red: 0.200, green: 0.047, blue: 0.173, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfacePrimary = UIColor(red: 0.933, green: 0.133, blue: 0.106, alpha: 1)
    public static let tokensDarkModeColorSurfaceSurfacePrimaryFaint = UIColor(red: 0.216, green: 0.024, blue: 0.016, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfaceSing = UIColor(red: 0.239, green: 0.000, blue: 0.000, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceSingFaint = UIColor(red: 0.149, green: 0.000, blue: 0.000, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceSuccess = UIColor(red: 0.141, green: 0.573, blue: 0.141, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceSuccessFaint = UIColor(red: 0.000, green: 0.200, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceSystemError = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceSystemErrorDark = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceWarning = UIColor(red: 0.808, green: 0.345, blue: 0.149, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceWarningFaint = UIColor(red: 0.310, green: 0.094, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorTextTextBody = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1) /** Use for body text, button labels, form labels etc. Can also be used for headings if required. */
    public static let tokensDarkModeColorTextTextDanger = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorTextTextHeading = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1) /** Use for headings to ensure that multi-brand switching remains accurate. */
    public static let tokensDarkModeColorTextTextHero = UIColor(red: 0.663, green: 0.647, blue: 0.875, alpha: 1) /** This is not currently used in the Design System */
    public static let tokensDarkModeColorTextTextHoller = UIColor(red: 0.737, green: 0.341, blue: 0.922, alpha: 1) /** This is not currently used in the Design System, however ION use this text colour in the App. GEL can not endorse the use of this text colour until it's approved and documented as part of the Master Brand. */
    public static let tokensDarkModeColorTextTextInfo = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorTextTextLink = UIColor(red: 0.945, green: 0.259, blue: 0.235, alpha: 1) /** Use this colour for plain text links that do not have an additional visual cue (arrow, icon etc). link text should also be underlined for accessibility compliance. */
    public static let tokensDarkModeColorTextTextMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** This colour is used for text on solid backgrounds. Buttons, panels etc. */
    public static let tokensDarkModeColorTextTextMuted = UIColor(red: 0.557, green: 0.553, blue: 0.596, alpha: 1) /** Use for text that needs less emphasis - Hint text, sub labels etc. */
    public static let tokensDarkModeColorTextTextPrimary = UIColor(red: 0.945, green: 0.259, blue: 0.235, alpha: 1) /** This is not currently used in the Design System. */
    public static let tokensDarkModeColorTextTextSuccess = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorTextTextSystemError = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensDarkModeColorTextTextWarning = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeBorderRadiusFull = 99
    public static let tokensLightModeBorderRadiusLg = 12
    public static let tokensLightModeBorderRadiusMd = 6
    public static let tokensLightModeBorderRadiusNone = 0
    public static let tokensLightModeBorderRadiusSm = 2
    public static let tokensLightModeBorderRadiusXl = 24
    public static let tokensLightModeColorBackgroundBackgroundPaleBlack = UIColor(red: 0.961, green: 0.961, blue: 0.965, alpha: 1) /** Use for screen backgrounds to establish correct emphasis:  Pale in Light Mode,  Black in Dark Mode */
    public static let tokensLightModeColorBackgroundBackgroundPaleFaint = UIColor(red: 0.961, green: 0.961, blue: 0.965, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: Pale in Light Mode, Faint in Dark Mode */
    public static let tokensLightModeColorBackgroundBackgroundWhiteBlack = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: White in Light Mode, Black in Dark Mode */
    public static let tokensLightModeColorBackgroundBackgroundWhiteFaint = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensLightModeColorBackgroundBackgroundWhitePale = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensLightModeColorBorderBorderDance = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorBorderBorderDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorBorderBorderDangerMild = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorBorderBorderFocus = UIColor(red: 0.737, green: 0.341, blue: 0.922, alpha: 1) /** This is a reserved colour. It must only be used for the focus state keyboard navigation. */
    public static let tokensLightModeColorBorderBorderHero = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensLightModeColorBorderBorderHoller = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensLightModeColorBorderBorderInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorBorderBorderInfoMild = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorBorderBorderMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** This border colour is used for borders on solid backgrounds. It's not currently used in the Design System. Use in accordance with the brand guidelines and accessibility requirements. */
    public static let tokensLightModeColorBorderBorderMuted = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1) /** This border colour is not currently used in the Design System. */
    public static let tokensLightModeColorBorderBorderMutedMild = UIColor(red: 0.714, green: 0.714, blue: 0.737, alpha: 1) /** This border colour is not currently used in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorBorderBorderMutedSoft = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1) /** This colour replaces the old "Border". It can be used for borders and design embellishment that does not have to be accessible. */
    public static let tokensLightModeColorBorderBorderMutedStrong = UIColor(red: 0.557, green: 0.553, blue: 0.596, alpha: 1) /** This colour replaces the old "BorderDark". It's used for UI elements (form input fields) to ensure that they comply with AA accessible requirements. */
    public static let tokensLightModeColorBorderBorderPop = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensLightModeColorBorderBorderPrimary = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensLightModeColorBorderBorderSing = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorBorderBorderSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorBorderBorderSuccessMild = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorBorderBorderWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorBorderBorderWarningMild = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorDataDataAOpacity = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 0.5) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataASolid = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataATint = UIColor(red: 0.957, green: 0.431, blue: 0.412, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataBOpacity = UIColor(red: 0.227, green: 0.204, blue: 0.576, alpha: 0.6) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataBSolid = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataBTint = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataCOpacity = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataCSolid = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataCTint = UIColor(red: 1.000, green: 0.620, blue: 0.929, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataDOpacity = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 0.5) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataDSolid = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataDTint = UIColor(red: 0.808, green: 0.518, blue: 0.941, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataEOpacity = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 0.5) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataESolid = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataETint = UIColor(red: 0.800, green: 0.502, blue: 0.502, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataFOpacity = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataFSolid = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataFTint = UIColor(red: 0.980, green: 0.737, blue: 0.529, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorPictogramSurfacePictogramAccent = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensLightModeColorPictogramSurfacePictogramBase = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensLightModeColorStateSurfaceActiveHero = UIColor(red: 0.435, green: 0.412, blue: 0.788, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceActiveHeroFaint = UIColor(red: 0.886, green: 0.882, blue: 0.957, alpha: 1)
    public static let tokensLightModeColorStateSurfaceActiveMono = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceActiveMutedPale = UIColor(red: 0.714, green: 0.714, blue: 0.737, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceActivePrimary = UIColor(red: 0.957, green: 0.431, blue: 0.412, alpha: 1)
    public static let tokensLightModeColorStateSurfaceActivePrimaryFaint = UIColor(red: 0.980, green: 0.800, blue: 0.796, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverHero = UIColor(red: 0.259, green: 0.235, blue: 0.592, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverHeroFaint = UIColor(red: 0.945, green: 0.941, blue: 0.980, alpha: 1)
    public static let tokensLightModeColorStateSurfaceHoverMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverMutedPale = UIColor(red: 0.961, green: 0.961, blue: 0.965, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverPrimary = UIColor(red: 0.933, green: 0.133, blue: 0.106, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverPrimaryFaint = UIColor(red: 1.000, green: 0.941, blue: 0.941, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorSurfaceSurfaceDance = UIColor(red: 0.961, green: 0.478, blue: 0.059, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceDanceFaint = UIColor(red: 1.000, green: 0.973, blue: 0.953, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceDangerFaint = UIColor(red: 0.988, green: 0.949, blue: 0.949, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceHero = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1)
    public static let tokensLightModeColorSurfaceSurfaceHeroFaint = UIColor(red: 0.945, green: 0.941, blue: 0.980, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfaceHoller = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1) /** This colour is for data visualisation, however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensLightModeColorSurfaceSurfaceHollerFaint = UIColor(red: 0.980, green: 0.945, blue: 0.992, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfaceInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceInfoFaint = UIColor(red: 0.949, green: 0.973, blue: 0.988, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** Use surface-mono when you want to switch from white to black. */
    public static let tokensLightModeColorSurfaceSurfaceMuted = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1) /** Muted is now slightly lighter but remains accessible in all required scenarios. */
    public static let tokensLightModeColorSurfaceSurfaceMutedFaint = UIColor(red: 0.976, green: 0.976, blue: 0.980, alpha: 1) /** This colour is used for backgrounds. Note; In Light Mode this token references the same colour variable as surface-muted-pale (muted100). This is so we can maintain the correct emphasis for both Light and Dark Modes. */
    public static let tokensLightModeColorSurfaceSurfaceMutedMild = UIColor(red: 0.714, green: 0.714, blue: 0.737, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorSurfaceSurfaceMutedPale = UIColor(red: 0.961, green: 0.961, blue: 0.965, alpha: 1) /** This colour is used for backgrounds */
    public static let tokensLightModeColorSurfaceSurfaceMutedSoft = UIColor(red: 0.871, green: 0.871, blue: 0.882, alpha: 1) /** This colour is not currently used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorSurfaceSurfaceMutedStrong = UIColor(red: 0.557, green: 0.553, blue: 0.596, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorSurfaceSurfaceMutedVivid = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1) /** Use for icons that need to be text colour. */
    public static let tokensLightModeColorSurfaceSurfacePop = UIColor(red: 1.000, green: 0.239, blue: 0.859, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. */
    public static let tokensLightModeColorSurfaceSurfacePopFaint = UIColor(red: 1.000, green: 0.961, blue: 0.992, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfacePrimary = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1)
    public static let tokensLightModeColorSurfaceSurfacePrimaryFaint = UIColor(red: 1.000, green: 0.941, blue: 0.941, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfaceSing = UIColor(red: 0.600, green: 0.000, blue: 0.000, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceSingFaint = UIColor(red: 0.980, green: 0.949, blue: 0.949, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceSuccessFaint = UIColor(red: 0.949, green: 0.976, blue: 0.949, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceSystemError = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceSystemErrorDark = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceWarningFaint = UIColor(red: 0.988, green: 0.961, blue: 0.949, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorTextTextBody = UIColor(red: 0.086, green: 0.086, blue: 0.098, alpha: 1) /** Use for body text, button labels, form labels etc. Can also be used for headings if required. */
    public static let tokensLightModeColorTextTextDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorTextTextHeading = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1) /** Use for headings to ensure that multi-brand switching remains accurate. */
    public static let tokensLightModeColorTextTextHero = UIColor(red: 0.122, green: 0.110, blue: 0.310, alpha: 1) /** This is not currently used in the Design System */
    public static let tokensLightModeColorTextTextHoller = UIColor(red: 0.600, green: 0.102, blue: 0.839, alpha: 1) /** This is not currently used in the Design System, however ION use this text colour in the App. GEL can not endorse the use of this text colour until it's approved and documented as part of the Master Brand. */
    public static let tokensLightModeColorTextTextInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorTextTextLink = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1) /** Use this colour for plain text links that do not have an additional visual cue (arrow, icon etc). link text should also be underlined for accessibility compliance. */
    public static let tokensLightModeColorTextTextMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** This colour is used for text on solid backgrounds. Buttons, panels etc. */
    public static let tokensLightModeColorTextTextMuted = UIColor(red: 0.439, green: 0.435, blue: 0.486, alpha: 1) /** Use for text that needs less emphasis - Hint text, sub labels etc. */
    public static let tokensLightModeColorTextTextPrimary = UIColor(red: 0.855, green: 0.090, blue: 0.063, alpha: 1) /** This is not currently used in the Design System. */
    public static let tokensLightModeColorTextTextSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorTextTextSystemError = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensLightModeColorTextTextWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
}