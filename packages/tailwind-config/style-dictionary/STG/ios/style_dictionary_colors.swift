
//
// style_dictionary_colors.swift
//

// Do not edit directly, this file was auto-generated.


import UIKit

public class {
    public static let primitivesBorderRadius100 = 2
    public static let primitivesBorderRadius200 = 4
    public static let primitivesBorderRadius300 = 6
    public static let primitivesBorderRadius400 = 8
    public static let primitivesBorderRadius500 = 12
    public static let primitivesBorderRadius600 = 16
    public static let primitivesBorderRadius700 = 24
    public static let primitivesBorderRadius800 = 32
    public static let primitivesBorderRadius900 = 99
    public static let primitivesBorderRadiusNone = 0
    public static let primitivesBorderWidthDefault = 1
    public static let primitivesBorderWidthThick = 3
    public static let primitivesColorReservedBlue100 = UIColor(red: 0.851, green: 0.918, blue: 0.965, alpha: 1)
    public static let primitivesColorReservedBlue200 = UIColor(red: 0.600, green: 0.780, blue: 0.906, alpha: 1)
    public static let primitivesColorReservedBlue300 = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1)
    public static let primitivesColorReservedBlue400 = UIColor(red: 0.141, green: 0.529, blue: 0.800, alpha: 1)
    public static let primitivesColorReservedBlue50 = UIColor(red: 0.949, green: 0.973, blue: 0.988, alpha: 1)
    public static let primitivesColorReservedBlue500 = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1)
    public static let primitivesColorReservedBlue600 = UIColor(red: 0.000, green: 0.388, blue: 0.655, alpha: 1)
    public static let primitivesColorReservedBlue700 = UIColor(red: 0.000, green: 0.318, blue: 0.537, alpha: 1)
    public static let primitivesColorReservedBlue800 = UIColor(red: 0.000, green: 0.251, blue: 0.424, alpha: 1)
    public static let primitivesColorReservedBlue900 = UIColor(red: 0.000, green: 0.180, blue: 0.306, alpha: 1)
    public static let primitivesColorReservedBlue950 = UIColor(red: 0.000, green: 0.114, blue: 0.192, alpha: 1)
    public static let primitivesColorReservedGreen100 = UIColor(red: 0.851, green: 0.925, blue: 0.851, alpha: 1)
    public static let primitivesColorReservedGreen200 = UIColor(red: 0.600, green: 0.800, blue: 0.600, alpha: 1)
    public static let primitivesColorReservedGreen300 = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1)
    public static let primitivesColorReservedGreen400 = UIColor(red: 0.141, green: 0.573, blue: 0.141, alpha: 1)
    public static let primitivesColorReservedGreen50 = UIColor(red: 0.949, green: 0.976, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedGreen500 = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen600 = UIColor(red: 0.000, green: 0.427, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen700 = UIColor(red: 0.000, green: 0.353, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen800 = UIColor(red: 0.000, green: 0.275, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen900 = UIColor(red: 0.000, green: 0.200, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedGreen950 = UIColor(red: 0.000, green: 0.125, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange100 = UIColor(red: 0.953, green: 0.847, blue: 0.800, alpha: 1)
    public static let primitivesColorReservedOrange200 = UIColor(red: 0.910, green: 0.694, blue: 0.600, alpha: 1)
    public static let primitivesColorReservedOrange300 = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1)
    public static let primitivesColorReservedOrange400 = UIColor(red: 0.808, green: 0.345, blue: 0.149, alpha: 1)
    public static let primitivesColorReservedOrange50 = UIColor(red: 0.988, green: 0.961, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedOrange500 = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange600 = UIColor(red: 0.655, green: 0.196, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange700 = UIColor(red: 0.541, green: 0.161, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange800 = UIColor(red: 0.424, green: 0.125, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange900 = UIColor(red: 0.310, green: 0.094, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedOrange950 = UIColor(red: 0.192, green: 0.059, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed100 = UIColor(red: 0.976, green: 0.902, blue: 0.902, alpha: 1)
    public static let primitivesColorReservedRed200 = UIColor(red: 0.918, green: 0.651, blue: 0.651, alpha: 1)
    public static let primitivesColorReservedRed300 = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1)
    public static let primitivesColorReservedRed400 = UIColor(red: 0.816, green: 0.200, blue: 0.200, alpha: 1)
    public static let primitivesColorReservedRed50 = UIColor(red: 0.988, green: 0.949, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedRed500 = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed600 = UIColor(red: 0.655, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed700 = UIColor(red: 0.537, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed800 = UIColor(red: 0.424, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed900 = UIColor(red: 0.306, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedRed950 = UIColor(red: 0.192, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow100 = UIColor(red: 1.000, green: 1.000, blue: 0.902, alpha: 1)
    public static let primitivesColorReservedYellow200 = UIColor(red: 1.000, green: 1.000, blue: 0.749, alpha: 1)
    public static let primitivesColorReservedYellow300 = UIColor(red: 1.000, green: 1.000, blue: 0.502, alpha: 1)
    public static let primitivesColorReservedYellow400 = UIColor(red: 1.000, green: 1.000, blue: 0.251, alpha: 1)
    public static let primitivesColorReservedYellow50 = UIColor(red: 1.000, green: 1.000, blue: 0.949, alpha: 1)
    public static let primitivesColorReservedYellow500 = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow600 = UIColor(red: 0.851, green: 0.851, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow700 = UIColor(red: 0.702, green: 0.702, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow800 = UIColor(red: 0.549, green: 0.549, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow900 = UIColor(red: 0.400, green: 0.400, blue: 0.000, alpha: 1)
    public static let primitivesColorReservedYellow950 = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1)
    public static let primitivesColorStgAccessGreen100 = UIColor(red: 0.796, green: 0.933, blue: 0.824, alpha: 1)
    public static let primitivesColorStgAccessGreen200 = UIColor(red: 0.463, green: 0.784, blue: 0.533, alpha: 1)
    public static let primitivesColorStgAccessGreen300 = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1)
    public static let primitivesColorStgAccessGreen400 = UIColor(red: 0.129, green: 0.616, blue: 0.294, alpha: 1)
    public static let primitivesColorStgAccessGreen50 = UIColor(red: 0.882, green: 0.965, blue: 0.894, alpha: 1)
    public static let primitivesColorStgAccessGreen500 = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 1)
    public static let primitivesColorStgAccessGreen600 = UIColor(red: 0.000, green: 0.451, blue: 0.188, alpha: 1)
    public static let primitivesColorStgAccessGreen700 = UIColor(red: 0.000, green: 0.373, blue: 0.157, alpha: 1)
    public static let primitivesColorStgAccessGreen800 = UIColor(red: 0.000, green: 0.290, blue: 0.122, alpha: 1)
    public static let primitivesColorStgAccessGreen900 = UIColor(red: 0.000, green: 0.212, blue: 0.090, alpha: 1)
    public static let primitivesColorStgAccessGreen950 = UIColor(red: 0.000, green: 0.133, blue: 0.055, alpha: 1)
    public static let primitivesColorStgAccessGreenOpacity = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 0.45)
    public static let primitivesColorStgAmber100 = UIColor(red: 1.000, green: 0.949, blue: 0.918, alpha: 1)
    public static let primitivesColorStgAmber200 = UIColor(red: 1.000, green: 0.875, blue: 0.792, alpha: 1)
    public static let primitivesColorStgAmber300 = UIColor(red: 1.000, green: 0.749, blue: 0.580, alpha: 1)
    public static let primitivesColorStgAmber400 = UIColor(red: 1.000, green: 0.624, blue: 0.373, alpha: 1)
    public static let primitivesColorStgAmber50 = UIColor(red: 1.000, green: 0.976, blue: 0.957, alpha: 1)
    public static let primitivesColorStgAmber500 = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1)
    public static let primitivesColorStgAmber600 = UIColor(red: 0.851, green: 0.424, blue: 0.137, alpha: 1)
    public static let primitivesColorStgAmber700 = UIColor(red: 0.702, green: 0.349, blue: 0.114, alpha: 1)
    public static let primitivesColorStgAmber800 = UIColor(red: 0.549, green: 0.275, blue: 0.090, alpha: 1)
    public static let primitivesColorStgAmber900 = UIColor(red: 0.400, green: 0.200, blue: 0.063, alpha: 1)
    public static let primitivesColorStgAmber950 = UIColor(red: 0.251, green: 0.125, blue: 0.039, alpha: 1)
    public static let primitivesColorStgAmberOpacity = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 0.4)
    public static let primitivesColorStgDarkGreen100 = UIColor(red: 0.902, green: 0.929, blue: 0.922, alpha: 1)
    public static let primitivesColorStgDarkGreen200 = UIColor(red: 0.749, green: 0.820, blue: 0.800, alpha: 1)
    public static let primitivesColorStgDarkGreen300 = UIColor(red: 0.502, green: 0.643, blue: 0.600, alpha: 1)
    public static let primitivesColorStgDarkGreen400 = UIColor(red: 0.251, green: 0.463, blue: 0.400, alpha: 1)
    public static let primitivesColorStgDarkGreen50 = UIColor(red: 0.949, green: 0.965, blue: 0.961, alpha: 1)
    public static let primitivesColorStgDarkGreen500 = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1)
    public static let primitivesColorStgDarkGreen600 = UIColor(red: 0.000, green: 0.239, blue: 0.169, alpha: 1)
    public static let primitivesColorStgDarkGreen700 = UIColor(red: 0.000, green: 0.196, blue: 0.141, alpha: 1)
    public static let primitivesColorStgDarkGreen800 = UIColor(red: 0.000, green: 0.157, blue: 0.110, alpha: 1)
    public static let primitivesColorStgDarkGreen900 = UIColor(red: 0.000, green: 0.114, blue: 0.078, alpha: 1)
    public static let primitivesColorStgDarkGreen950 = UIColor(red: 0.000, green: 0.071, blue: 0.051, alpha: 1)
    public static let primitivesColorStgGreen100 = UIColor(red: 0.949, green: 0.976, blue: 0.914, alpha: 1)
    public static let primitivesColorStgGreen200 = UIColor(red: 0.867, green: 0.937, blue: 0.780, alpha: 1)
    public static let primitivesColorStgGreen300 = UIColor(red: 0.737, green: 0.875, blue: 0.565, alpha: 1)
    public static let primitivesColorStgGreen400 = UIColor(red: 0.604, green: 0.808, blue: 0.345, alpha: 1)
    public static let primitivesColorStgGreen50 = UIColor(red: 0.973, green: 0.988, blue: 0.957, alpha: 1)
    public static let primitivesColorStgGreen500 = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1)
    public static let primitivesColorStgGreen600 = UIColor(red: 0.400, green: 0.635, blue: 0.106, alpha: 1)
    public static let primitivesColorStgGreen700 = UIColor(red: 0.329, green: 0.522, blue: 0.086, alpha: 1)
    public static let primitivesColorStgGreen800 = UIColor(red: 0.259, green: 0.412, blue: 0.071, alpha: 1)
    public static let primitivesColorStgGreen900 = UIColor(red: 0.188, green: 0.298, blue: 0.051, alpha: 1)
    public static let primitivesColorStgGreen950 = UIColor(red: 0.118, green: 0.188, blue: 0.031, alpha: 1)
    public static let primitivesColorStgGreenOpacity = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 0.45)
    public static let primitivesColorStgGrey100 = UIColor(red: 0.961, green: 0.961, blue: 0.957, alpha: 1)
    public static let primitivesColorStgGrey200 = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1)
    public static let primitivesColorStgGrey300 = UIColor(red: 0.698, green: 0.698, blue: 0.682, alpha: 1)
    public static let primitivesColorStgGrey400 = UIColor(red: 0.553, green: 0.549, blue: 0.506, alpha: 1)
    public static let primitivesColorStgGrey50 = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let primitivesColorStgGrey500 = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1)
    public static let primitivesColorStgGrey600 = UIColor(red: 0.369, green: 0.365, blue: 0.333, alpha: 1)
    public static let primitivesColorStgGrey700 = UIColor(red: 0.298, green: 0.298, blue: 0.282, alpha: 1)
    public static let primitivesColorStgGrey800 = UIColor(red: 0.224, green: 0.224, blue: 0.216, alpha: 1)
    public static let primitivesColorStgGrey900 = UIColor(red: 0.141, green: 0.141, blue: 0.141, alpha: 1)
    public static let primitivesColorStgGrey950 = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let primitivesColorStgPlum100 = UIColor(red: 0.933, green: 0.918, blue: 0.949, alpha: 1)
    public static let primitivesColorStgPlum200 = UIColor(red: 0.827, green: 0.796, blue: 0.871, alpha: 1)
    public static let primitivesColorStgPlum300 = UIColor(red: 0.659, green: 0.588, blue: 0.737, alpha: 1)
    public static let primitivesColorStgPlum400 = UIColor(red: 0.486, green: 0.384, blue: 0.608, alpha: 1)
    public static let primitivesColorStgPlum50 = UIColor(red: 0.965, green: 0.961, blue: 0.973, alpha: 1)
    public static let primitivesColorStgPlum500 = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1)
    public static let primitivesColorStgPlum600 = UIColor(red: 0.267, green: 0.149, blue: 0.404, alpha: 1)
    public static let primitivesColorStgPlum700 = UIColor(red: 0.220, green: 0.122, blue: 0.333, alpha: 1)
    public static let primitivesColorStgPlum800 = UIColor(red: 0.173, green: 0.098, blue: 0.263, alpha: 1)
    public static let primitivesColorStgPlum900 = UIColor(red: 0.125, green: 0.071, blue: 0.188, alpha: 1)
    public static let primitivesColorStgPlum950 = UIColor(red: 0.078, green: 0.043, blue: 0.118, alpha: 1)
    public static let primitivesColorStgPlumOpacity = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 0.3)
    public static let primitivesColorStgRed100 = UIColor(red: 0.988, green: 0.902, blue: 0.902, alpha: 1)
    public static let primitivesColorStgRed200 = UIColor(red: 0.973, green: 0.749, blue: 0.749, alpha: 1)
    public static let primitivesColorStgRed300 = UIColor(red: 0.945, green: 0.502, blue: 0.502, alpha: 1)
    public static let primitivesColorStgRed400 = UIColor(red: 0.918, green: 0.251, blue: 0.251, alpha: 1)
    public static let primitivesColorStgRed50 = UIColor(red: 0.996, green: 0.949, blue: 0.949, alpha: 1)
    public static let primitivesColorStgRed500 = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorStgRed600 = UIColor(red: 0.757, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorStgRed700 = UIColor(red: 0.624, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorStgRed800 = UIColor(red: 0.490, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorStgRed900 = UIColor(red: 0.357, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorStgRed950 = UIColor(red: 0.224, green: 0.000, blue: 0.000, alpha: 1)
    public static let primitivesColorStgRedOpacity = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 0.3)
    public static let primitivesColorStgSky100 = UIColor(red: 0.925, green: 0.976, blue: 0.992, alpha: 1)
    public static let primitivesColorStgSky200 = UIColor(red: 0.812, green: 0.941, blue: 0.980, alpha: 1)
    public static let primitivesColorStgSky300 = UIColor(red: 0.663, green: 0.894, blue: 0.965, alpha: 1)
    public static let primitivesColorStgSky400 = UIColor(red: 0.435, green: 0.824, blue: 0.941, alpha: 1)
    public static let primitivesColorStgSky50 = UIColor(red: 0.961, green: 0.988, blue: 0.996, alpha: 1)
    public static let primitivesColorStgSky500 = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1)
    public static let primitivesColorStgSky600 = UIColor(red: 0.212, green: 0.651, blue: 0.784, alpha: 1)
    public static let primitivesColorStgSky700 = UIColor(red: 0.173, green: 0.537, blue: 0.647, alpha: 1)
    public static let primitivesColorStgSky800 = UIColor(red: 0.137, green: 0.420, blue: 0.506, alpha: 1)
    public static let primitivesColorStgSky900 = UIColor(red: 0.098, green: 0.306, blue: 0.369, alpha: 1)
    public static let primitivesColorStgSky950 = UIColor(red: 0.063, green: 0.192, blue: 0.231, alpha: 1)
    public static let primitivesColorStgSkyOpacity = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 0.3)
    public static let primitivesColorStgYellow100 = UIColor(red: 1.000, green: 0.980, blue: 0.902, alpha: 1)
    public static let primitivesColorStgYellow200 = UIColor(red: 1.000, green: 0.953, blue: 0.749, alpha: 1)
    public static let primitivesColorStgYellow300 = UIColor(red: 1.000, green: 0.902, blue: 0.502, alpha: 1)
    public static let primitivesColorStgYellow400 = UIColor(red: 1.000, green: 0.855, blue: 0.251, alpha: 1)
    public static let primitivesColorStgYellow50 = UIColor(red: 1.000, green: 0.992, blue: 0.949, alpha: 1)
    public static let primitivesColorStgYellow500 = UIColor(red: 1.000, green: 0.804, blue: 0.000, alpha: 1)
    public static let primitivesColorStgYellow600 = UIColor(red: 0.851, green: 0.682, blue: 0.000, alpha: 1)
    public static let primitivesColorStgYellow700 = UIColor(red: 0.651, green: 0.522, blue: 0.000, alpha: 1)
    public static let primitivesColorStgYellow800 = UIColor(red: 0.549, green: 0.443, blue: 0.000, alpha: 1)
    public static let primitivesColorStgYellow900 = UIColor(red: 0.400, green: 0.322, blue: 0.000, alpha: 1)
    public static let primitivesColorStgYellow950 = UIColor(red: 0.251, green: 0.200, blue: 0.000, alpha: 1)
    public static let themesStGeorgeBorderRadiusFull = 99
    public static let themesStGeorgeBorderRadiusLarge = 24
    public static let themesStGeorgeBorderRadiusMedium = 12
    public static let themesStGeorgeBorderRadiusNone = 0
    public static let themesStGeorgeBorderRadiusSmall = 4
    public static let themesStGeorgeBorderRadiusXlarge = 99
    public static let themesStGeorgeColorAliasSurfacePictogramAccentDm = UIColor(red: 0.604, green: 0.808, blue: 0.345, alpha: 1)
    public static let themesStGeorgeColorAliasSurfacePictogramAccentLm = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1)
    public static let themesStGeorgeColorAliasSurfacePictogramBaseDm = UIColor(red: 0.129, green: 0.616, blue: 0.294, alpha: 1)
    public static let themesStGeorgeColorAliasSurfacePictogramBaseLm = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1)
    public static let themesStGeorgeColorAliasTextBodyDm = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1)
    public static let themesStGeorgeColorAliasTextBodyLm = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1)
    public static let themesStGeorgeColorAliasTextHeadingDm = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1)
    public static let themesStGeorgeColorAliasTextHeadingLm = UIColor(red: 0.000, green: 0.451, blue: 0.188, alpha: 1)
    public static let themesStGeorgeColorDance100 = UIColor(red: 1.000, green: 0.949, blue: 0.918, alpha: 1)
    public static let themesStGeorgeColorDance200 = UIColor(red: 1.000, green: 0.875, blue: 0.792, alpha: 1)
    public static let themesStGeorgeColorDance300 = UIColor(red: 1.000, green: 0.749, blue: 0.580, alpha: 1)
    public static let themesStGeorgeColorDance400 = UIColor(red: 1.000, green: 0.624, blue: 0.373, alpha: 1)
    public static let themesStGeorgeColorDance50 = UIColor(red: 1.000, green: 0.976, blue: 0.957, alpha: 1)
    public static let themesStGeorgeColorDance500 = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1)
    public static let themesStGeorgeColorDance600 = UIColor(red: 0.851, green: 0.424, blue: 0.137, alpha: 1)
    public static let themesStGeorgeColorDance700 = UIColor(red: 0.702, green: 0.349, blue: 0.114, alpha: 1)
    public static let themesStGeorgeColorDance800 = UIColor(red: 0.549, green: 0.275, blue: 0.090, alpha: 1)
    public static let themesStGeorgeColorDance900 = UIColor(red: 0.400, green: 0.200, blue: 0.063, alpha: 1)
    public static let themesStGeorgeColorDance950 = UIColor(red: 0.251, green: 0.125, blue: 0.039, alpha: 1)
    public static let themesStGeorgeColorDanceOpacity = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 0.4)
    public static let themesStGeorgeColorHero100 = UIColor(red: 0.796, green: 0.933, blue: 0.824, alpha: 1)
    public static let themesStGeorgeColorHero200 = UIColor(red: 0.463, green: 0.784, blue: 0.533, alpha: 1)
    public static let themesStGeorgeColorHero300 = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1)
    public static let themesStGeorgeColorHero400 = UIColor(red: 0.129, green: 0.616, blue: 0.294, alpha: 1)
    public static let themesStGeorgeColorHero50 = UIColor(red: 0.882, green: 0.965, blue: 0.894, alpha: 1)
    public static let themesStGeorgeColorHero500 = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 1)
    public static let themesStGeorgeColorHero600 = UIColor(red: 0.000, green: 0.451, blue: 0.188, alpha: 1)
    public static let themesStGeorgeColorHero700 = UIColor(red: 0.000, green: 0.373, blue: 0.157, alpha: 1)
    public static let themesStGeorgeColorHero800 = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1)
    public static let themesStGeorgeColorHero900 = UIColor(red: 0.000, green: 0.239, blue: 0.169, alpha: 1)
    public static let themesStGeorgeColorHero950 = UIColor(red: 0.000, green: 0.196, blue: 0.141, alpha: 1)
    public static let themesStGeorgeColorHeroOpacity = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 0.45)
    public static let themesStGeorgeColorHoller100 = UIColor(red: 0.925, green: 0.976, blue: 0.992, alpha: 1)
    public static let themesStGeorgeColorHoller200 = UIColor(red: 0.812, green: 0.941, blue: 0.980, alpha: 1)
    public static let themesStGeorgeColorHoller300 = UIColor(red: 0.663, green: 0.894, blue: 0.965, alpha: 1)
    public static let themesStGeorgeColorHoller400 = UIColor(red: 0.435, green: 0.824, blue: 0.941, alpha: 1)
    public static let themesStGeorgeColorHoller50 = UIColor(red: 0.961, green: 0.988, blue: 0.996, alpha: 1)
    public static let themesStGeorgeColorHoller500 = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1)
    public static let themesStGeorgeColorHoller600 = UIColor(red: 0.212, green: 0.651, blue: 0.784, alpha: 1)
    public static let themesStGeorgeColorHoller700 = UIColor(red: 0.173, green: 0.537, blue: 0.647, alpha: 1)
    public static let themesStGeorgeColorHoller800 = UIColor(red: 0.137, green: 0.420, blue: 0.506, alpha: 1)
    public static let themesStGeorgeColorHoller900 = UIColor(red: 0.098, green: 0.306, blue: 0.369, alpha: 1)
    public static let themesStGeorgeColorHoller950 = UIColor(red: 0.063, green: 0.192, blue: 0.231, alpha: 1)
    public static let themesStGeorgeColorHollerOpacity = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 0.3)
    public static let themesStGeorgeColorMonoBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorMonoWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let themesStGeorgeColorMuted100 = UIColor(red: 0.961, green: 0.961, blue: 0.957, alpha: 1)
    public static let themesStGeorgeColorMuted200 = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1)
    public static let themesStGeorgeColorMuted300 = UIColor(red: 0.698, green: 0.698, blue: 0.682, alpha: 1)
    public static let themesStGeorgeColorMuted400 = UIColor(red: 0.553, green: 0.549, blue: 0.506, alpha: 1)
    public static let themesStGeorgeColorMuted50 = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let themesStGeorgeColorMuted500 = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1)
    public static let themesStGeorgeColorMuted600 = UIColor(red: 0.369, green: 0.365, blue: 0.333, alpha: 1)
    public static let themesStGeorgeColorMuted700 = UIColor(red: 0.298, green: 0.298, blue: 0.282, alpha: 1)
    public static let themesStGeorgeColorMuted800 = UIColor(red: 0.224, green: 0.224, blue: 0.216, alpha: 1)
    public static let themesStGeorgeColorMuted900 = UIColor(red: 0.141, green: 0.141, blue: 0.141, alpha: 1)
    public static let themesStGeorgeColorMuted950 = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let themesStGeorgeColorPop100 = UIColor(red: 0.949, green: 0.976, blue: 0.914, alpha: 1)
    public static let themesStGeorgeColorPop200 = UIColor(red: 0.867, green: 0.937, blue: 0.780, alpha: 1)
    public static let themesStGeorgeColorPop300 = UIColor(red: 0.737, green: 0.875, blue: 0.565, alpha: 1)
    public static let themesStGeorgeColorPop400 = UIColor(red: 0.604, green: 0.808, blue: 0.345, alpha: 1)
    public static let themesStGeorgeColorPop50 = UIColor(red: 0.973, green: 0.988, blue: 0.957, alpha: 1)
    public static let themesStGeorgeColorPop500 = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1)
    public static let themesStGeorgeColorPop600 = UIColor(red: 0.400, green: 0.635, blue: 0.106, alpha: 1)
    public static let themesStGeorgeColorPop700 = UIColor(red: 0.329, green: 0.522, blue: 0.086, alpha: 1)
    public static let themesStGeorgeColorPop800 = UIColor(red: 0.259, green: 0.412, blue: 0.071, alpha: 1)
    public static let themesStGeorgeColorPop900 = UIColor(red: 0.188, green: 0.298, blue: 0.051, alpha: 1)
    public static let themesStGeorgeColorPop950 = UIColor(red: 0.118, green: 0.188, blue: 0.031, alpha: 1)
    public static let themesStGeorgeColorPopOpacity = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 0.45)
    public static let themesStGeorgeColorPrimary100 = UIColor(red: 0.988, green: 0.902, blue: 0.902, alpha: 1)
    public static let themesStGeorgeColorPrimary200 = UIColor(red: 0.973, green: 0.749, blue: 0.749, alpha: 1)
    public static let themesStGeorgeColorPrimary300 = UIColor(red: 0.945, green: 0.502, blue: 0.502, alpha: 1)
    public static let themesStGeorgeColorPrimary400 = UIColor(red: 0.918, green: 0.251, blue: 0.251, alpha: 1)
    public static let themesStGeorgeColorPrimary50 = UIColor(red: 0.996, green: 0.949, blue: 0.949, alpha: 1)
    public static let themesStGeorgeColorPrimary500 = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorPrimary600 = UIColor(red: 0.757, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorPrimary700 = UIColor(red: 0.624, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorPrimary800 = UIColor(red: 0.490, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorPrimary900 = UIColor(red: 0.357, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorPrimary950 = UIColor(red: 0.224, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorPrimaryOpacity = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 0.3)
    public static let themesStGeorgeColorReservedDanger100 = UIColor(red: 0.976, green: 0.902, blue: 0.902, alpha: 1)
    public static let themesStGeorgeColorReservedDanger200 = UIColor(red: 0.918, green: 0.651, blue: 0.651, alpha: 1)
    public static let themesStGeorgeColorReservedDanger300 = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1)
    public static let themesStGeorgeColorReservedDanger400 = UIColor(red: 0.816, green: 0.200, blue: 0.200, alpha: 1)
    public static let themesStGeorgeColorReservedDanger50 = UIColor(red: 0.988, green: 0.949, blue: 0.949, alpha: 1)
    public static let themesStGeorgeColorReservedDanger500 = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedDanger600 = UIColor(red: 0.655, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedDanger700 = UIColor(red: 0.537, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedDanger800 = UIColor(red: 0.424, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedDanger900 = UIColor(red: 0.306, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedDanger950 = UIColor(red: 0.192, green: 0.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedInfo100 = UIColor(red: 0.851, green: 0.918, blue: 0.965, alpha: 1)
    public static let themesStGeorgeColorReservedInfo200 = UIColor(red: 0.600, green: 0.780, blue: 0.906, alpha: 1)
    public static let themesStGeorgeColorReservedInfo300 = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1)
    public static let themesStGeorgeColorReservedInfo400 = UIColor(red: 0.141, green: 0.529, blue: 0.800, alpha: 1)
    public static let themesStGeorgeColorReservedInfo50 = UIColor(red: 0.949, green: 0.973, blue: 0.988, alpha: 1)
    public static let themesStGeorgeColorReservedInfo500 = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1)
    public static let themesStGeorgeColorReservedInfo600 = UIColor(red: 0.000, green: 0.388, blue: 0.655, alpha: 1)
    public static let themesStGeorgeColorReservedInfo700 = UIColor(red: 0.000, green: 0.318, blue: 0.537, alpha: 1)
    public static let themesStGeorgeColorReservedInfo800 = UIColor(red: 0.000, green: 0.251, blue: 0.424, alpha: 1)
    public static let themesStGeorgeColorReservedInfo900 = UIColor(red: 0.000, green: 0.180, blue: 0.306, alpha: 1)
    public static let themesStGeorgeColorReservedInfo950 = UIColor(red: 0.000, green: 0.114, blue: 0.192, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess100 = UIColor(red: 0.851, green: 0.925, blue: 0.851, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess200 = UIColor(red: 0.600, green: 0.800, blue: 0.600, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess300 = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess400 = UIColor(red: 0.141, green: 0.573, blue: 0.141, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess50 = UIColor(red: 0.949, green: 0.976, blue: 0.949, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess500 = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess600 = UIColor(red: 0.000, green: 0.427, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess700 = UIColor(red: 0.000, green: 0.353, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess800 = UIColor(red: 0.000, green: 0.275, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess900 = UIColor(red: 0.000, green: 0.200, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSuccess950 = UIColor(red: 0.000, green: 0.125, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSystem100 = UIColor(red: 1.000, green: 1.000, blue: 0.902, alpha: 1)
    public static let themesStGeorgeColorReservedSystem200 = UIColor(red: 1.000, green: 1.000, blue: 0.749, alpha: 1)
    public static let themesStGeorgeColorReservedSystem300 = UIColor(red: 1.000, green: 1.000, blue: 0.502, alpha: 1)
    public static let themesStGeorgeColorReservedSystem400 = UIColor(red: 1.000, green: 1.000, blue: 0.251, alpha: 1)
    public static let themesStGeorgeColorReservedSystem50 = UIColor(red: 1.000, green: 1.000, blue: 0.949, alpha: 1)
    public static let themesStGeorgeColorReservedSystem500 = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSystem600 = UIColor(red: 0.851, green: 0.851, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSystem700 = UIColor(red: 0.702, green: 0.702, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSystem800 = UIColor(red: 0.549, green: 0.549, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSystem900 = UIColor(red: 0.400, green: 0.400, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedSystem950 = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedWarning100 = UIColor(red: 0.953, green: 0.847, blue: 0.800, alpha: 1)
    public static let themesStGeorgeColorReservedWarning200 = UIColor(red: 0.910, green: 0.694, blue: 0.600, alpha: 1)
    public static let themesStGeorgeColorReservedWarning300 = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1)
    public static let themesStGeorgeColorReservedWarning400 = UIColor(red: 0.808, green: 0.345, blue: 0.149, alpha: 1)
    public static let themesStGeorgeColorReservedWarning50 = UIColor(red: 0.988, green: 0.961, blue: 0.949, alpha: 1)
    public static let themesStGeorgeColorReservedWarning500 = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedWarning600 = UIColor(red: 0.655, green: 0.196, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedWarning700 = UIColor(red: 0.541, green: 0.161, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedWarning800 = UIColor(red: 0.424, green: 0.125, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedWarning900 = UIColor(red: 0.310, green: 0.094, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorReservedWarning950 = UIColor(red: 0.192, green: 0.059, blue: 0.000, alpha: 1)
    public static let themesStGeorgeColorSing100 = UIColor(red: 0.933, green: 0.918, blue: 0.949, alpha: 1)
    public static let themesStGeorgeColorSing200 = UIColor(red: 0.827, green: 0.796, blue: 0.871, alpha: 1)
    public static let themesStGeorgeColorSing300 = UIColor(red: 0.659, green: 0.588, blue: 0.737, alpha: 1)
    public static let themesStGeorgeColorSing400 = UIColor(red: 0.486, green: 0.384, blue: 0.608, alpha: 1)
    public static let themesStGeorgeColorSing50 = UIColor(red: 0.965, green: 0.961, blue: 0.973, alpha: 1)
    public static let themesStGeorgeColorSing500 = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1)
    public static let themesStGeorgeColorSing600 = UIColor(red: 0.267, green: 0.149, blue: 0.404, alpha: 1)
    public static let themesStGeorgeColorSing700 = UIColor(red: 0.220, green: 0.122, blue: 0.333, alpha: 1)
    public static let themesStGeorgeColorSing800 = UIColor(red: 0.173, green: 0.098, blue: 0.263, alpha: 1)
    public static let themesStGeorgeColorSing900 = UIColor(red: 0.125, green: 0.071, blue: 0.188, alpha: 1)
    public static let themesStGeorgeColorSing950 = UIColor(red: 0.078, green: 0.043, blue: 0.118, alpha: 1)
    public static let themesStGeorgeColorSingOpacity = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 0.3)
    public static let tokensDarkModeBorderRadiusFull = 99
    public static let tokensDarkModeBorderRadiusLg = 24
    public static let tokensDarkModeBorderRadiusMd = 12
    public static let tokensDarkModeBorderRadiusNone = 0
    public static let tokensDarkModeBorderRadiusSm = 4
    public static let tokensDarkModeBorderRadiusXl = 99
    public static let tokensDarkModeColorBackgroundBackgroundPaleBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** Use for screen backgrounds to establish correct emphasis:  Pale in Light Mode,  Black in Dark Mode */
    public static let tokensDarkModeColorBackgroundBackgroundPaleFaint = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: Pale in Light Mode, Faint in Dark Mode */
    public static let tokensDarkModeColorBackgroundBackgroundWhiteBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: White in Light Mode, Black in Dark Mode */
    public static let tokensDarkModeColorBackgroundBackgroundWhiteFaint = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensDarkModeColorBackgroundBackgroundWhitePale = UIColor(red: 0.141, green: 0.141, blue: 0.141, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensDarkModeColorBorderBorderDance = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorBorderBorderDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorBorderBorderDangerMild = UIColor(red: 0.537, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorBorderBorderFocus = UIColor(red: 0.435, green: 0.824, blue: 0.941, alpha: 1) /** This is a reserved colour. It must only be used for the focus state keyboard navigation. */
    public static let tokensDarkModeColorBorderBorderHero = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensDarkModeColorBorderBorderHoller = UIColor(red: 0.435, green: 0.824, blue: 0.941, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensDarkModeColorBorderBorderInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorBorderBorderInfoMild = UIColor(red: 0.000, green: 0.318, blue: 0.537, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorBorderBorderMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** This border colour is used for borders on solid backgrounds. It's not currently used in the Design System. Use in accordance with the brand guidelines and accessibility requirements. */
    public static let tokensDarkModeColorBorderBorderMuted = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1) /** This border colour is not currently used in the Design System. */
    public static let tokensDarkModeColorBorderBorderMutedMild = UIColor(red: 0.298, green: 0.298, blue: 0.282, alpha: 1) /** This border colour is not currently used in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorBorderBorderMutedSoft = UIColor(red: 0.298, green: 0.298, blue: 0.282, alpha: 1) /** This colour replaces the old "Border". It can be used for borders and design embellishment that does not have to be accessible. */
    public static let tokensDarkModeColorBorderBorderMutedStrong = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1) /** This colour replaces the old "BorderDark". It's used for UI elements (form input fields) to ensure that they comply with AA accessible requirements. */
    public static let tokensDarkModeColorBorderBorderPop = UIColor(red: 0.259, green: 0.412, blue: 0.071, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensDarkModeColorBorderBorderPrimary = UIColor(red: 0.918, green: 0.251, blue: 0.251, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensDarkModeColorBorderBorderSing = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorBorderBorderSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorBorderBorderSuccessMild = UIColor(red: 0.000, green: 0.353, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorBorderBorderWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorBorderBorderWarningMild = UIColor(red: 0.541, green: 0.161, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorDataDataAOpacity = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 0.3) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataASolid = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataATint = UIColor(red: 0.973, green: 0.749, blue: 0.749, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataBOpacity = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataBSolid = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataBTint = UIColor(red: 0.463, green: 0.784, blue: 0.533, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataCOpacity = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataCSolid = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataCTint = UIColor(red: 0.737, green: 0.875, blue: 0.565, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataDOpacity = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 0.3) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataDSolid = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataDTint = UIColor(red: 0.812, green: 0.941, blue: 0.980, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataEOpacity = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 0.3) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataESolid = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataETint = UIColor(red: 0.659, green: 0.588, blue: 0.737, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataFOpacity = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 0.4) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataFSolid = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorDataDataFTint = UIColor(red: 1.000, green: 0.749, blue: 0.580, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensDarkModeColorPictogramSurfacePictogramAccent = UIColor(red: 0.604, green: 0.808, blue: 0.345, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensDarkModeColorPictogramSurfacePictogramBase = UIColor(red: 0.129, green: 0.616, blue: 0.294, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensDarkModeColorStateSurfaceActiveHero = UIColor(red: 0.796, green: 0.933, blue: 0.824, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceActiveHeroFaint = UIColor(red: 0.129, green: 0.616, blue: 0.294, alpha: 1)
    public static let tokensDarkModeColorStateSurfaceActiveMono = UIColor(red: 0.224, green: 0.224, blue: 0.216, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceActiveMutedPale = UIColor(red: 0.369, green: 0.365, blue: 0.333, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceActivePrimary = UIColor(red: 0.988, green: 0.902, blue: 0.902, alpha: 1)
    public static let tokensDarkModeColorStateSurfaceActivePrimaryFaint = UIColor(red: 0.490, green: 0.000, blue: 0.000, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverHero = UIColor(red: 0.463, green: 0.784, blue: 0.533, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverHeroFaint = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1)
    public static let tokensDarkModeColorStateSurfaceHoverMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverMutedPale = UIColor(red: 0.224, green: 0.224, blue: 0.216, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverPrimary = UIColor(red: 0.973, green: 0.749, blue: 0.749, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorStateSurfaceHoverPrimaryFaint = UIColor(red: 0.357, green: 0.000, blue: 0.000, alpha: 1) /** This token is for hover states. */
    public static let tokensDarkModeColorSurfaceSurfaceDance = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceDanceFaint = UIColor(red: 0.400, green: 0.200, blue: 0.063, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceDanger = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceDangerFaint = UIColor(red: 0.306, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceHero = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1)
    public static let tokensDarkModeColorSurfaceSurfaceHeroFaint = UIColor(red: 0.000, green: 0.196, blue: 0.141, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfaceHoller = UIColor(red: 0.435, green: 0.824, blue: 0.941, alpha: 1) /** This colour is for data visualisation, however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensDarkModeColorSurfaceSurfaceHollerFaint = UIColor(red: 0.063, green: 0.192, blue: 0.231, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfaceInfo = UIColor(red: 0.141, green: 0.529, blue: 0.800, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceInfoFaint = UIColor(red: 0.000, green: 0.180, blue: 0.306, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** Use surface-mono when you want to switch from white to black. */
    public static let tokensDarkModeColorSurfaceSurfaceMuted = UIColor(red: 0.553, green: 0.549, blue: 0.506, alpha: 1) /** Muted is now slightly lighter but remains accessible in all required scenarios. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedFaint = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1) /** This colour is used for backgrounds. Note; In Light Mode this token references the same colour variable as surface-muted-pale (muted100). This is so we can maintain the correct emphasis for both Light and Dark Modes. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedMild = UIColor(red: 0.298, green: 0.298, blue: 0.282, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedPale = UIColor(red: 0.141, green: 0.141, blue: 0.141, alpha: 1) /** This colour is used for backgrounds */
    public static let tokensDarkModeColorSurfaceSurfaceMutedSoft = UIColor(red: 0.224, green: 0.224, blue: 0.216, alpha: 1) /** This colour is not currently used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedStrong = UIColor(red: 0.369, green: 0.365, blue: 0.333, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensDarkModeColorSurfaceSurfaceMutedVivid = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1) /** Use for icons that need to be text colour. */
    public static let tokensDarkModeColorSurfaceSurfacePop = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. */
    public static let tokensDarkModeColorSurfaceSurfacePopFaint = UIColor(red: 0.118, green: 0.188, blue: 0.031, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfacePrimary = UIColor(red: 0.918, green: 0.251, blue: 0.251, alpha: 1)
    public static let tokensDarkModeColorSurfaceSurfacePrimaryFaint = UIColor(red: 0.224, green: 0.000, blue: 0.000, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensDarkModeColorSurfaceSurfaceSing = UIColor(red: 0.125, green: 0.071, blue: 0.188, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceSingFaint = UIColor(red: 0.078, green: 0.043, blue: 0.118, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensDarkModeColorSurfaceSurfaceSuccess = UIColor(red: 0.141, green: 0.573, blue: 0.141, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceSuccessFaint = UIColor(red: 0.000, green: 0.200, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceSystemError = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceSystemErrorDark = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceWarning = UIColor(red: 0.808, green: 0.345, blue: 0.149, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorSurfaceSurfaceWarningFaint = UIColor(red: 0.310, green: 0.094, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensDarkModeColorTextTextBody = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1) /** Use for body text, button labels, form labels etc. Can also be used for headings if required. */
    public static let tokensDarkModeColorTextTextDanger = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensDarkModeColorTextTextHeading = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1) /** Use for headings to ensure that multi-brand switching remains accurate. */
    public static let tokensDarkModeColorTextTextHero = UIColor(red: 0.463, green: 0.784, blue: 0.533, alpha: 1) /** This is not currently used in the Design System */
    public static let tokensDarkModeColorTextTextHoller = UIColor(red: 0.663, green: 0.894, blue: 0.965, alpha: 1) /** This is not currently used in the Design System, however ION use this text colour in the App. GEL can not endorse the use of this text colour until it's approved and documented as part of the Master Brand. */
    public static let tokensDarkModeColorTextTextInfo = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensDarkModeColorTextTextLink = UIColor(red: 0.945, green: 0.502, blue: 0.502, alpha: 1) /** Use this colour for plain text links that do not have an additional visual cue (arrow, icon etc). link text should also be underlined for accessibility compliance. */
    public static let tokensDarkModeColorTextTextMono = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /** This colour is used for text on solid backgrounds. Buttons, panels etc. */
    public static let tokensDarkModeColorTextTextMuted = UIColor(red: 0.553, green: 0.549, blue: 0.506, alpha: 1) /** Use for text that needs less emphasis - Hint text, sub labels etc. */
    public static let tokensDarkModeColorTextTextPrimary = UIColor(red: 0.945, green: 0.502, blue: 0.502, alpha: 1) /** This is not currently used in the Design System. */
    public static let tokensDarkModeColorTextTextSuccess = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensDarkModeColorTextTextSystemError = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensDarkModeColorTextTextWarning = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeBorderRadiusFull = 99
    public static let tokensLightModeBorderRadiusLg = 24
    public static let tokensLightModeBorderRadiusMd = 12
    public static let tokensLightModeBorderRadiusNone = 0
    public static let tokensLightModeBorderRadiusSm = 4
    public static let tokensLightModeBorderRadiusXl = 99
    public static let tokensLightModeColorBackgroundBackgroundPaleBlack = UIColor(red: 0.961, green: 0.961, blue: 0.957, alpha: 1) /** Use for screen backgrounds to establish correct emphasis:  Pale in Light Mode,  Black in Dark Mode */
    public static let tokensLightModeColorBackgroundBackgroundPaleFaint = UIColor(red: 0.961, green: 0.961, blue: 0.957, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: Pale in Light Mode, Faint in Dark Mode */
    public static let tokensLightModeColorBackgroundBackgroundWhiteBlack = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** Use for screen backgrounds to establish correct emphasis: White in Light Mode, Black in Dark Mode */
    public static let tokensLightModeColorBackgroundBackgroundWhiteFaint = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensLightModeColorBackgroundBackgroundWhitePale = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** All the surface-white tokens default to white in light mode, however when switched to dark mode they adopt the correct shade value. Example usage includes soft buttons, button groups, switches etc which have to be white in light mode but need more emphasis in dark mode. */
    public static let tokensLightModeColorBorderBorderDance = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorBorderBorderDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorBorderBorderDangerMild = UIColor(red: 0.859, green: 0.388, blue: 0.388, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorBorderBorderFocus = UIColor(red: 0.663, green: 0.894, blue: 0.965, alpha: 1) /** This is a reserved colour. It must only be used for the focus state keyboard navigation. */
    public static let tokensLightModeColorBorderBorderHero = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensLightModeColorBorderBorderHoller = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensLightModeColorBorderBorderInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorBorderBorderInfoMild = UIColor(red: 0.271, green: 0.604, blue: 0.831, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorBorderBorderMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** This border colour is used for borders on solid backgrounds. It's not currently used in the Design System. Use in accordance with the brand guidelines and accessibility requirements. */
    public static let tokensLightModeColorBorderBorderMuted = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1) /** This border colour is not currently used in the Design System. */
    public static let tokensLightModeColorBorderBorderMutedMild = UIColor(red: 0.698, green: 0.698, blue: 0.682, alpha: 1) /** This border colour is not currently used in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorBorderBorderMutedSoft = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1) /** This colour replaces the old "Border". It can be used for borders and design embellishment that does not have to be accessible. */
    public static let tokensLightModeColorBorderBorderMutedStrong = UIColor(red: 0.553, green: 0.549, blue: 0.506, alpha: 1) /** This colour replaces the old "BorderDark". It's used for UI elements (form input fields) to ensure that they comply with AA accessible requirements. */
    public static let tokensLightModeColorBorderBorderPop = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensLightModeColorBorderBorderPrimary = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1) /** This border colour is a subtle way to add colour to the UI. Use sparingly and in accordance with the brand guidelines. */
    public static let tokensLightModeColorBorderBorderSing = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1) /** This border colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorBorderBorderSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorBorderBorderSuccessMild = UIColor(red: 0.278, green: 0.643, blue: 0.278, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorBorderBorderWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorBorderBorderWarningMild = UIColor(red: 0.843, green: 0.471, blue: 0.310, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorDataDataAOpacity = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 0.3) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataASolid = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataATint = UIColor(red: 0.973, green: 0.749, blue: 0.749, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataBOpacity = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataBSolid = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataBTint = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataCOpacity = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 0.45) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataCSolid = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataCTint = UIColor(red: 0.737, green: 0.875, blue: 0.565, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataDOpacity = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 0.3) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataDSolid = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataDTint = UIColor(red: 0.812, green: 0.941, blue: 0.980, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataEOpacity = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 0.3) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataESolid = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataETint = UIColor(red: 0.659, green: 0.588, blue: 0.737, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataFOpacity = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 0.4) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataFSolid = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorDataDataFTint = UIColor(red: 1.000, green: 0.749, blue: 0.580, alpha: 1) /** This is a reserved colour. It must only be used for data visualisation - graphs and charts. */
    public static let tokensLightModeColorPictogramSurfacePictogramAccent = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensLightModeColorPictogramSurfacePictogramBase = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1) /** This is a reserved component colour token. It must only be used for Pictograms. */
    public static let tokensLightModeColorStateSurfaceActiveHero = UIColor(red: 0.184, green: 0.659, blue: 0.329, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceActiveHeroFaint = UIColor(red: 0.796, green: 0.933, blue: 0.824, alpha: 1)
    public static let tokensLightModeColorStateSurfaceActiveMono = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceActiveMutedPale = UIColor(red: 0.698, green: 0.698, blue: 0.682, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceActivePrimary = UIColor(red: 0.973, green: 0.749, blue: 0.749, alpha: 1)
    public static let tokensLightModeColorStateSurfaceActivePrimaryFaint = UIColor(red: 0.988, green: 0.902, blue: 0.902, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverHero = UIColor(red: 0.129, green: 0.616, blue: 0.294, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverHeroFaint = UIColor(red: 0.882, green: 0.965, blue: 0.894, alpha: 1)
    public static let tokensLightModeColorStateSurfaceHoverMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverMutedPale = UIColor(red: 0.961, green: 0.961, blue: 0.957, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverPrimary = UIColor(red: 0.918, green: 0.251, blue: 0.251, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorStateSurfaceHoverPrimaryFaint = UIColor(red: 0.996, green: 0.949, blue: 0.949, alpha: 1) /** This token is for hover states. */
    public static let tokensLightModeColorSurfaceSurfaceDance = UIColor(red: 1.000, green: 0.498, blue: 0.161, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceDanceFaint = UIColor(red: 1.000, green: 0.976, blue: 0.957, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceDangerFaint = UIColor(red: 0.988, green: 0.949, blue: 0.949, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceHero = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 1)
    public static let tokensLightModeColorSurfaceSurfaceHeroFaint = UIColor(red: 0.882, green: 0.965, blue: 0.894, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfaceHoller = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1) /** This colour is for data visualisation, however ION use it for other purposes in the App. GEL can not endorse the use of this colour for anything other than data visualisation until it's approved and documented as part of the Master Brand. */
    public static let tokensLightModeColorSurfaceSurfaceHollerFaint = UIColor(red: 0.961, green: 0.988, blue: 0.996, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfaceInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceInfoFaint = UIColor(red: 0.949, green: 0.973, blue: 0.988, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** Use surface-mono when you want to switch from white to black. */
    public static let tokensLightModeColorSurfaceSurfaceMuted = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1) /** Muted is now slightly lighter but remains accessible in all required scenarios. */
    public static let tokensLightModeColorSurfaceSurfaceMutedFaint = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1) /** This colour is used for backgrounds. Note; In Light Mode this token references the same colour variable as surface-muted-pale (muted100). This is so we can maintain the correct emphasis for both Light and Dark Modes. */
    public static let tokensLightModeColorSurfaceSurfaceMutedMild = UIColor(red: 0.698, green: 0.698, blue: 0.682, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorSurfaceSurfaceMutedPale = UIColor(red: 0.961, green: 0.961, blue: 0.957, alpha: 1) /** This colour is used for backgrounds */
    public static let tokensLightModeColorSurfaceSurfaceMutedSoft = UIColor(red: 0.882, green: 0.882, blue: 0.878, alpha: 1) /** This colour is not currently used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorSurfaceSurfaceMutedStrong = UIColor(red: 0.553, green: 0.549, blue: 0.506, alpha: 1) /** This colour is currently not used as a surface fill in the Design System. Accessibility is not guaranteed. */
    public static let tokensLightModeColorSurfaceSurfaceMutedVivid = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1) /** Use for icons that need to be text colour. */
    public static let tokensLightModeColorSurfaceSurfacePop = UIColor(red: 0.471, green: 0.745, blue: 0.125, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. */
    public static let tokensLightModeColorSurfaceSurfacePopFaint = UIColor(red: 0.973, green: 0.988, blue: 0.957, alpha: 1) /** This colour should be used very sparingly. It is for embellishment only. It can be used as a background in accordance with the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfacePrimary = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1)
    public static let tokensLightModeColorSurfaceSurfacePrimaryFaint = UIColor(red: 0.996, green: 0.949, blue: 0.949, alpha: 1) /** This colour is used for soft badges. It should not be used as a background as this is not specified in the brand guidelines. */
    public static let tokensLightModeColorSurfaceSurfaceSing = UIColor(red: 0.314, green: 0.176, blue: 0.475, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceSingFaint = UIColor(red: 0.965, green: 0.961, blue: 0.973, alpha: 1) /** This colour is strictly for data visualisation - graphs and charts. It must not be used for anything else. */
    public static let tokensLightModeColorSurfaceSurfaceSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceSuccessFaint = UIColor(red: 0.949, green: 0.976, blue: 0.949, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceSystemError = UIColor(red: 1.000, green: 1.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceSystemErrorDark = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorSurfaceSurfaceWarningFaint = UIColor(red: 0.988, green: 0.961, blue: 0.949, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
    public static let tokensLightModeColorTextTextBody = UIColor(red: 0.000, green: 0.282, blue: 0.200, alpha: 1) /** Use for body text, button labels, form labels etc. Can also be used for headings if required. */
    public static let tokensLightModeColorTextTextDanger = UIColor(red: 0.769, green: 0.000, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the danger messaging component. */
    public static let tokensLightModeColorTextTextHeading = UIColor(red: 0.000, green: 0.451, blue: 0.188, alpha: 1) /** Use for headings to ensure that multi-brand switching remains accurate. */
    public static let tokensLightModeColorTextTextHero = UIColor(red: 0.000, green: 0.529, blue: 0.224, alpha: 1) /** This is not currently used in the Design System */
    public static let tokensLightModeColorTextTextHoller = UIColor(red: 0.247, green: 0.765, blue: 0.922, alpha: 1) /** This is not currently used in the Design System, however ION use this text colour in the App. GEL can not endorse the use of this text colour until it's approved and documented as part of the Master Brand. */
    public static let tokensLightModeColorTextTextInfo = UIColor(red: 0.000, green: 0.455, blue: 0.769, alpha: 1) /** This is a reserved colour. It must only be used for the info messaging component. */
    public static let tokensLightModeColorTextTextLink = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1) /** Use this colour for plain text links that do not have an additional visual cue (arrow, icon etc). link text should also be underlined for accessibility compliance. */
    public static let tokensLightModeColorTextTextMono = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /** This colour is used for text on solid backgrounds. Buttons, panels etc. */
    public static let tokensLightModeColorTextTextMuted = UIColor(red: 0.447, green: 0.443, blue: 0.388, alpha: 1) /** Use for text that needs less emphasis - Hint text, sub labels etc. */
    public static let tokensLightModeColorTextTextPrimary = UIColor(red: 0.890, green: 0.000, blue: 0.000, alpha: 1) /** This is not currently used in the Design System. */
    public static let tokensLightModeColorTextTextSuccess = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the success messaging component. */
    public static let tokensLightModeColorTextTextSystemError = UIColor(red: 0.251, green: 0.251, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the system error messaging component. */
    public static let tokensLightModeColorTextTextWarning = UIColor(red: 0.773, green: 0.231, blue: 0.000, alpha: 1) /** This is a reserved colour. It must only be used for the warning messaging component. */
}